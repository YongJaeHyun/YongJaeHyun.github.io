{"version":3,"file":"static/js/9052.bd25a16d.chunk.js","mappings":"+JAEA,MAAMA,EAAiB,CACnBC,MAAO,GACPC,KAAM,KAEH,MAAMC,EACTC,WAAAA,GACI,MAAMC,EAAU,IAAIC,EAAAA,EACpBC,KAAKC,SAAWH,EAAQI,QACxBF,KAAKG,SAAUC,EAAAA,EAAAA,IAAW,CAAC,EAAGX,EAClC,CACAY,QAAAA,CAASC,GACL,MAAMC,EAAMD,EAASE,eAAe,MAAEd,EAAK,KAAEC,GAASK,KAAKG,QAASM,EAAIF,EAAIE,EAAId,EAAMe,EAAIH,EAAIG,EAAIf,EAAMgB,EAAM,KAAqFC,GAAxEZ,KAAKC,SAASY,MAAMJ,EAAGC,EAAIC,GAAYX,KAAKC,SAASY,MAAMJ,EAAGC,EAAIC,IAAwB,KAA8FG,GAAxEd,KAAKC,SAASY,MAAMJ,EAAIE,EAAKD,GAAUV,KAAKC,SAASY,MAAMJ,EAAIE,EAAKD,IAAsB,KAGrU,OAFAJ,EAASS,SAASN,EAAI,EACtBH,EAASS,SAASL,EAAI,EACfM,QAAQC,QAAQC,EAAAA,GAAOC,OAAOzB,EAAQkB,EAAGlB,GAASoB,GAC7D,CACA,UAAMM,CAAKC,GAAW,IAAAC,EAAAC,EAAAC,EAClB,MAAMC,EAAgBJ,EAAUK,cAAcC,UAAUC,KAAKC,KAAK1B,QAClEH,KAAKG,QAAQ2B,KAAoB,OAAbL,QAAa,IAAbA,OAAa,EAAbA,EAAeK,KACnC9B,KAAKG,QAAQT,OACY,QAArB4B,EAAc,OAAbG,QAAa,IAAbA,OAAa,EAAbA,EAAe/B,aAAK,IAAA4B,EAAAA,EAAI7B,EAAeC,OAAS2B,EAAUU,OAAOC,WACtEhC,KAAKG,QAAQR,KAA0B,QAAtB4B,EAAgB,OAAbE,QAAa,IAAbA,OAAa,EAAbA,EAAe9B,YAAI,IAAA4B,EAAAA,EAAI9B,EAAeE,KAC1DK,KAAKC,SAAS6B,KAAsB,QAAlBN,EAACxB,KAAKG,QAAQ2B,YAAI,IAAAN,EAAAA,GAAIS,EAAAA,EAAAA,aAClCjB,QAAQC,SAClB,CACAiB,KAAAA,GACA,CACAC,MAAAA,GACA,E","sources":["../node_modules/@tsparticles/path-curl-noise/browser/CurlNoiseGenerator.js"],"sourcesContent":["import { Vector, deepExtend, getRandom, } from \"@tsparticles/engine\";\nimport { SimplexNoise } from \"@tsparticles/simplex-noise\";\nconst defaultOptions = {\n    speed: 0.2,\n    step: 250,\n}, double = 2;\nexport class CurlNoiseGenerator {\n    constructor() {\n        const simplex = new SimplexNoise();\n        this._simplex = simplex.noise2d;\n        this.options = deepExtend({}, defaultOptions);\n    }\n    generate(particle) {\n        const pos = particle.getPosition(), { speed, step } = this.options, x = pos.x / step, y = pos.y / step, eps = 0.001, n1a = this._simplex.noise(x, y + eps), n2a = this._simplex.noise(x, y - eps), a = (n1a - n2a) / (double * eps), n1b = this._simplex.noise(x + eps, y), n2b = this._simplex.noise(x - eps, y), b = (n1b - n2b) / (double * eps);\n        particle.velocity.x = 0;\n        particle.velocity.y = 0;\n        return Promise.resolve(Vector.create(speed * a, speed * -b));\n    }\n    async init(container) {\n        const sourceOptions = container.actualOptions.particles.move.path.options;\n        this.options.seed = sourceOptions?.seed;\n        this.options.speed =\n            (sourceOptions?.speed ?? defaultOptions.speed) * container.retina.pixelRatio;\n        this.options.step = sourceOptions?.step ?? defaultOptions.step;\n        this._simplex.seed(this.options.seed ?? getRandom());\n        await Promise.resolve();\n    }\n    reset() {\n    }\n    update() {\n    }\n}\n"],"names":["defaultOptions","speed","step","CurlNoiseGenerator","constructor","simplex","SimplexNoise","this","_simplex","noise2d","options","deepExtend","generate","particle","pos","getPosition","x","y","eps","a","noise","b","velocity","Promise","resolve","Vector","create","init","container","_sourceOptions$speed","_sourceOptions$step","_this$options$seed","sourceOptions","actualOptions","particles","move","path","seed","retina","pixelRatio","getRandom","reset","update"],"sourceRoot":""}