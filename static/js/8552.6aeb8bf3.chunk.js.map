{"version":3,"file":"static/js/8552.6aeb8bf3.chunk.js","mappings":"4IACO,MAAMA,UAAyBC,EAAAA,GAClCC,WAAAA,GACIC,QACAC,KAAKC,SAAU,EACfD,KAAKE,SAAW,EAChBF,KAAKG,SAAW,EAChBH,KAAKI,OAAS,EACdJ,KAAKK,MAAQ,CACjB,CACAC,IAAAA,CAAKC,GACDR,MAAMO,KAAKC,GACNA,SAGgBC,IAAjBD,EAAKN,UACLD,KAAKC,QAAUM,EAAKN,cAEFO,IAAlBD,EAAKL,WACLF,KAAKE,UAAWO,EAAAA,EAAAA,IAAcF,EAAKL,gBAEjBM,IAAlBD,EAAKJ,WACLH,KAAKG,UAAWM,EAAAA,EAAAA,IAAcF,EAAKJ,gBAEnBK,IAAhBD,EAAKH,SACLJ,KAAKI,QAASK,EAAAA,EAAAA,IAAcF,EAAKH,cAElBI,IAAfD,EAAKF,QACLL,KAAKK,OAAQI,EAAAA,EAAAA,IAAcF,EAAKF,QAExC,EC3BG,MAAMK,UAAiBC,EAAAA,GAC1Bb,WAAAA,CAAYc,GACRb,MAAMa,EACV,CACAC,KAAAA,GACA,CACAC,IAAAA,GACA,CACA,cAAMC,CAASC,GACX,MAAMJ,EAAYZ,KAAKY,UACvB,IAAKI,EAAGC,QAAS,CACb,MAAMC,EAAcF,EAAGG,QAAQF,QAC/B,IAAKC,EACD,OAEJF,EAAGC,QAAU,CACTf,UAAUkB,EAAAA,EAAAA,IAAcF,EAAYhB,UAAYU,EAAUS,OAAOC,WACjEjB,OAAOe,EAAAA,EAAAA,IAAcF,EAAYb,OACjCD,QAAQgB,EAAAA,EAAAA,IAAcF,EAAYd,QAE1C,CACA,MAAMmB,EAAOP,EAAGQ,cAAeC,EAAQb,EAAUc,UAAUC,SAASC,YAAYL,EAAMP,EAAGC,QAAQf,UACjG,IAAK,MAAM2B,KAAMJ,EAAO,CACpB,GAAIT,IAAOa,GAAMA,EAAGC,UAChB,SAEJ,MAAMC,EAAOF,EAAGL,eAAe,GAAEQ,EAAE,GAAEC,EAAE,SAAE/B,IAAagC,EAAAA,EAAAA,IAAaH,EAAMR,GAAOY,EAAWnB,EAAGC,QAAQZ,MAAQW,EAAGC,QAAQb,OACzH,GAAIF,EA5BI,EA4BoB,CACxB,MAAMkC,GAAgBC,EAAAA,EAAAA,KA7BJ,EA6BsBC,KAAKC,IAAIrC,EAAWc,EAAGC,QAAQf,SA7BtC,IA6B8DiC,EA7B7C,EA6BoEA,GAAWK,EAAUC,EAAAA,GAAOC,OAAQV,EAAK9B,EAAYkC,EAAgBH,EAAK/B,EAAYkC,GAC5MP,EAAGc,SAASC,MAAMJ,EACtB,KACK,CACD,MAAMK,EAAcJ,EAAAA,GAAOC,OAAOP,EAAUA,GAC5CN,EAAGc,SAASC,MAAMC,EACtB,CACJ,OACMC,QAAQC,SAClB,CACAC,SAAAA,CAAUC,GAAU,IAAAC,EAAAC,EAChB,OAAwC,QAAxCD,EAA+B,QAA/BC,EAAOF,EAAS9B,QAAQF,eAAO,IAAAkC,OAAA,EAAxBA,EAA0BlD,eAAO,IAAAiD,GAAAA,CAC5C,CACAE,oBAAAA,CAAqBjC,GACZA,EAAQF,UACTE,EAAQF,QAAU,IAAIrB,GACzB,QAAAyD,EAAAC,UAAAC,OAH4BC,EAAO,IAAAC,MAAAJ,EAAA,EAAAA,EAAA,KAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAPF,EAAOE,EAAA,GAAAJ,UAAAI,GAIpC,IAAK,MAAMC,KAAUH,EACjBrC,EAAQF,QAAQX,KAAW,OAANqD,QAAM,IAANA,OAAM,EAANA,EAAQ1C,QAErC,CACA2C,KAAAA,GACA,E","sources":["../node_modules/@tsparticles/interaction-particles-repulse/browser/Options/Classes/ParticlesRepulse.js","../node_modules/@tsparticles/interaction-particles-repulse/browser/Repulser.js"],"sourcesContent":["import { ValueWithRandom, setRangeValue, } from \"@tsparticles/engine\";\nexport class ParticlesRepulse extends ValueWithRandom {\n    constructor() {\n        super();\n        this.enabled = false;\n        this.distance = 1;\n        this.duration = 1;\n        this.factor = 1;\n        this.speed = 1;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.enabled !== undefined) {\n            this.enabled = data.enabled;\n        }\n        if (data.distance !== undefined) {\n            this.distance = setRangeValue(data.distance);\n        }\n        if (data.duration !== undefined) {\n            this.duration = setRangeValue(data.duration);\n        }\n        if (data.factor !== undefined) {\n            this.factor = setRangeValue(data.factor);\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n    }\n}\n","import { ParticlesInteractorBase, Vector, clamp, getDistances, getRangeValue, } from \"@tsparticles/engine\";\nimport { ParticlesRepulse } from \"./Options/Classes/ParticlesRepulse.js\";\nconst minDistance = 0, identity = 1, squareExp = 2, minVelocity = 0;\nexport class Repulser extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact(p1) {\n        const container = this.container;\n        if (!p1.repulse) {\n            const repulseOpt1 = p1.options.repulse;\n            if (!repulseOpt1) {\n                return;\n            }\n            p1.repulse = {\n                distance: getRangeValue(repulseOpt1.distance) * container.retina.pixelRatio,\n                speed: getRangeValue(repulseOpt1.speed),\n                factor: getRangeValue(repulseOpt1.factor),\n            };\n        }\n        const pos1 = p1.getPosition(), query = container.particles.quadTree.queryCircle(pos1, p1.repulse.distance);\n        for (const p2 of query) {\n            if (p1 === p2 || p2.destroyed) {\n                continue;\n            }\n            const pos2 = p2.getPosition(), { dx, dy, distance } = getDistances(pos2, pos1), velocity = p1.repulse.speed * p1.repulse.factor;\n            if (distance > minDistance) {\n                const repulseFactor = clamp((identity - Math.pow(distance / p1.repulse.distance, squareExp)) * velocity, minVelocity, velocity), normVec = Vector.create((dx / distance) * repulseFactor, (dy / distance) * repulseFactor);\n                p2.position.addTo(normVec);\n            }\n            else {\n                const velocityVec = Vector.create(velocity, velocity);\n                p2.position.addTo(velocityVec);\n            }\n        }\n        await Promise.resolve();\n    }\n    isEnabled(particle) {\n        return particle.options.repulse?.enabled ?? false;\n    }\n    loadParticlesOptions(options, ...sources) {\n        if (!options.repulse) {\n            options.repulse = new ParticlesRepulse();\n        }\n        for (const source of sources) {\n            options.repulse.load(source?.repulse);\n        }\n    }\n    reset() {\n    }\n}\n"],"names":["ParticlesRepulse","ValueWithRandom","constructor","super","this","enabled","distance","duration","factor","speed","load","data","undefined","setRangeValue","Repulser","ParticlesInteractorBase","container","clear","init","interact","p1","repulse","repulseOpt1","options","getRangeValue","retina","pixelRatio","pos1","getPosition","query","particles","quadTree","queryCircle","p2","destroyed","pos2","dx","dy","getDistances","velocity","repulseFactor","clamp","Math","pow","normVec","Vector","create","position","addTo","velocityVec","Promise","resolve","isEnabled","particle","_particle$options$rep","_particle$options$rep2","loadParticlesOptions","_len","arguments","length","sources","Array","_key","source","reset"],"sourceRoot":""}