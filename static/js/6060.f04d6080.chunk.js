"use strict";(self.webpackChunkportfolio=self.webpackChunkportfolio||[]).push([[6060],{8440:(e,a,s)=>{function l(e,a,s){const l=s.segments[0].values[0];e.moveTo(l.x*a,l.y*a);for(const u of s.segments){const s=u.values[0],l=1,v=2,r=3;switch(u.type){case"line":e.lineTo(s.x*a,s.y*a);break;case"bezier":e.bezierCurveTo(u.values[l].x*a,u.values[l].y*a,u.values[v].x*a,u.values[v].y*a,u.values[r].x*a,u.values[r].y*a);break;case"quadratic":e.quadraticCurveTo(u.values[l].x*a,u.values[l].y*a,u.values[v].x*a,u.values[v].y*a);break;case"arc":e.arc(s.x*a,s.y*a,u.values[l].x*a,u.values[v].x,u.values[v].y);break;case"ellipse":e.ellipse(s.x*a,s.y*a,u.values[l].x*a,u.values[l].y*a,u.values[v].x,u.values[r].x,u.values[r].y)}}if(!s.half)return;for(let u=s.segments.length-1;u>=0;u--){const l=s.segments[u],v=l.values[0],r=1,t=2;switch(l.type){case"line":e.lineTo(v.x*-a,v.y*a);break;case"bezier":e.bezierCurveTo(-l.values[t].x*a,l.values[t].y*a,-l.values[r].x*a,l.values[r].y*a,v.x*a,v.y*a);break;case"quadratic":e.quadraticCurveTo(-l.values[r].x*a,l.values[r].y*a,-l.values[t].x*a,l.values[t].y*a)}}}s.d(a,{drawPath:()=>l})}}]);
//# sourceMappingURL=6060.f04d6080.chunk.js.map