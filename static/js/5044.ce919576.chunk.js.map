{"version":3,"file":"static/js/5044.ce919576.chunk.js","mappings":"6JACA,MAAMA,EAAS,EAAGC,EAAWC,KAAKC,GAAKH,EAAQI,EAAW,EAAGC,EAAS,CAAEC,EAAG,EAAGC,EAAG,GAAKC,EAAc,KAC7F,SAASC,EAAYC,GACxB,MAAM,QAAEC,EAAO,SAAEC,EAAQ,OAAEC,GAAWH,EACtC,QAA+BI,IAA3BF,EAASG,oBACmBD,IAA5BF,EAASI,qBACkBF,IAA3BF,EAASK,oBACeH,IAAxBF,EAASM,iBACkBJ,IAA3BF,EAASO,cACT,OAEJ,MAAMC,EAAcP,EAASD,EAASG,cAAiBM,EAAAA,GACvDV,EAAQW,yBAA2B,kBACnCX,EAAQY,YACRZ,EAAQa,OAAOJ,EAAYf,EAAOE,GAClCI,EAAQc,IAAIpB,EAAOC,EAAGD,EAAOE,EAAGa,EAAYhB,EAAUH,GACtDU,EAAQe,YACRf,EAAQgB,OACRhB,EAAQW,yBAA2B,aACvC,CACO,SAASM,EAAQlB,GACpB,MAAM,QAAEC,EAAO,SAAEC,EAAQ,OAAEC,GAAWH,EACtC,QAA+BI,IAA3BF,EAASG,oBACmBD,IAA5BF,EAASI,qBACkBF,IAA3BF,EAASK,oBACeH,IAAxBF,EAASM,iBACkBJ,IAA3BF,EAASO,cACT,OAEJ,MAAMU,EAAQ5B,GAAYW,EAASM,WAAalB,GAAS8B,EAAUD,EAAQjB,EAASK,cAAgBT,EAAauB,EAAUF,EAAQjB,EAASO,cAAgBX,EAAawB,EAAenB,EAASD,EAASI,eAAkBK,EAAAA,GAC5N,IAAIY,EAAIJ,EAAOK,GAAS,EAExB,IADAvB,EAAQa,OAAOX,EAASX,KAAKiC,IAAIJ,GAAUlB,EAASX,KAAKkC,IAAIL,IACtDE,GAAKhC,EAAUgC,GAAKJ,EACnBK,GACAvB,EAAQ0B,OAAOL,EAAc9B,KAAKiC,IAAIF,EAAIH,GAAUE,EAAc9B,KAAKkC,IAAIH,EAAIH,IAC/EnB,EAAQ0B,OAAOxB,EAASX,KAAKiC,IAAIF,EAAIF,GAAUlB,EAASX,KAAKkC,IAAIH,EAAIF,MAGrEpB,EAAQ0B,OAAOxB,EAASX,KAAKiC,IAAIF,EAAIF,GAAUlB,EAASX,KAAKkC,IAAIH,EAAIF,IACrEpB,EAAQ0B,OAAOL,EAAc9B,KAAKiC,IAAIF,EAAIH,GAAUE,EAAc9B,KAAKkC,IAAIH,EAAIH,KAEnFI,GAAUA,CAElB,C","sources":["../node_modules/@tsparticles/shape-cog/browser/Utils.js"],"sourcesContent":["import { percentDenominator } from \"@tsparticles/engine\";\nconst double = 2, doublePI = Math.PI * double, minAngle = 0, origin = { x: 0, y: 0 }, taperFactor = 0.005;\nexport function drawCogHole(data) {\n    const { context, particle, radius } = data;\n    if (particle.cogHoleRadius === undefined ||\n        particle.cogInnerRadius === undefined ||\n        particle.cogInnerTaper === undefined ||\n        particle.cogNotches === undefined ||\n        particle.cogOuterTaper === undefined) {\n        return;\n    }\n    const holeRadius = (radius * particle.cogHoleRadius) / percentDenominator;\n    context.globalCompositeOperation = \"destination-out\";\n    context.beginPath();\n    context.moveTo(holeRadius, origin.y);\n    context.arc(origin.x, origin.y, holeRadius, minAngle, doublePI);\n    context.closePath();\n    context.fill();\n    context.globalCompositeOperation = \"source-over\";\n}\nexport function drawCog(data) {\n    const { context, particle, radius } = data;\n    if (particle.cogHoleRadius === undefined ||\n        particle.cogInnerRadius === undefined ||\n        particle.cogInnerTaper === undefined ||\n        particle.cogNotches === undefined ||\n        particle.cogOuterTaper === undefined) {\n        return;\n    }\n    const angle = doublePI / (particle.cogNotches * double), taperAI = angle * particle.cogInnerTaper * taperFactor, taperAO = angle * particle.cogOuterTaper * taperFactor, innerRadius = (radius * particle.cogInnerRadius) / percentDenominator;\n    let a = angle, toggle = false;\n    context.moveTo(radius * Math.cos(taperAO), radius * Math.sin(taperAO));\n    for (; a <= doublePI; a += angle) {\n        if (toggle) {\n            context.lineTo(innerRadius * Math.cos(a - taperAI), innerRadius * Math.sin(a - taperAI));\n            context.lineTo(radius * Math.cos(a + taperAO), radius * Math.sin(a + taperAO));\n        }\n        else {\n            context.lineTo(radius * Math.cos(a - taperAO), radius * Math.sin(a - taperAO));\n            context.lineTo(innerRadius * Math.cos(a + taperAI), innerRadius * Math.sin(a + taperAI));\n        }\n        toggle = !toggle;\n    }\n}\n"],"names":["double","doublePI","Math","PI","minAngle","origin","x","y","taperFactor","drawCogHole","data","context","particle","radius","undefined","cogHoleRadius","cogInnerRadius","cogInnerTaper","cogNotches","cogOuterTaper","holeRadius","percentDenominator","globalCompositeOperation","beginPath","moveTo","arc","closePath","fill","drawCog","angle","taperAI","taperAO","innerRadius","a","toggle","cos","sin","lineTo"],"sourceRoot":""}