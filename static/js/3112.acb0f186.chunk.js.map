{"version":3,"file":"static/js/3112.acb0f186.chunk.js","mappings":"yKAIA,SAASA,EAAkBC,EAAQC,EAAWC,GAC1C,MAAMC,EAAWF,EAAUC,GACC,IAAAE,OAAXC,IAAbF,IACAH,EAAOE,IAAmB,QAAZE,EAACJ,EAAOE,UAAI,IAAAE,EAAAA,EAFkB,GAEED,EAEtD,CACA,SAASG,EAASC,EAAQC,GAA0B,IAAnBC,EAASC,UAAAC,OAAA,QAAAN,IAAAK,UAAA,IAAAA,UAAA,GACtC,IAAKF,EACD,OAGJ,IADgBD,EAEZ,OAEJ,MAAMK,EAJUL,EAIaC,MAC7B,GAAKI,EAGL,IAAK,MAAMV,KAAOM,EAAO,CACrB,MAAMK,EAAQL,EAAMN,GACfW,GAGLD,EAAaE,YAAYZ,EAAKW,EAAOJ,EAAY,YAAc,GACnE,CACJ,CACO,MAAMM,EACTC,WAAAA,CAAYC,GACRC,KAAKD,UAAYA,EACjBC,KAAKC,uBAA0BC,IAC3B,IAAK,MAAMC,KAAWH,KAAKI,kBAAmB,KAAAC,EACzB,QAAjBA,EAAAF,EAAQG,iBAAS,IAAAD,GAAjBA,EAAAE,KAAAJ,EAAoBD,EACxB,GAEJF,KAAKQ,sBAAwB,CAACC,EAAKP,EAAUQ,EAAQC,EAAUC,EAAaC,KACxE,IAAK,MAAMV,KAAWH,KAAKc,iBAAkB,KAAAC,EACzC,GAAIZ,EAAQa,eAAgB,CACxB,MAAM,KAAEC,EAAI,OAAEC,GAAWf,EAAQa,eAAed,EAAUO,EAAKC,EAAQC,GACnEM,IACAL,EAAYK,KAAOA,GAEnBC,IACAN,EAAYM,OAASA,EAE7B,CACA,GAAIf,EAAQgB,mBAAoB,CAC5B,MAAMC,EAAmBjB,EAAQgB,mBAAmBjB,GACpD,IAAK,MAAMlB,KAAOoC,EACdvC,EAAkBgC,EAAWO,EAAkBpC,EAEvD,CACkB,QAAlB+B,EAAAZ,EAAQkB,kBAAU,IAAAN,GAAlBA,EAAAR,KAAAJ,EAAqBD,EACzB,GAEJF,KAAKsB,oBAAsB,KACvB,IAAK,MAAMC,KAAUvB,KAAKwB,eAAgB,KAAAC,EACzB,QAAbA,EAAAF,EAAOG,cAAM,IAAAD,GAAbA,EAAAlB,KAAAgB,EACJ,GAEJvB,KAAK2B,yBAA4BzB,IAC7B,IAAI0B,EAAQC,EACZ,IAAK,MAAMN,KAAUvB,KAAK8B,cAOtB,IANKF,GAAUL,EAAOQ,oBAClBH,GAASI,EAAAA,EAAAA,IAAgBT,EAAOQ,kBAAkB7B,MAEjD2B,GAAUN,EAAOU,sBAClBJ,GAASG,EAAAA,EAAAA,IAAgBT,EAAOU,oBAAoB/B,KAEpD0B,GAAUC,EACV,MAGR,MAAO,CAACD,EAAQC,EAAO,EAE3B7B,KAAKkC,WAAaC,UACd,MAA8CC,EAA9BpC,KAAKD,UAAUsC,cAA+BC,eAAeF,MAAOG,EAAQH,EAAMG,MAClG,GAAIA,EAAO,CACP,MAAMC,GAAWC,EAAAA,EAAAA,IAAgBF,GACjC,GAAIC,EAAU,CACV,MAAME,EAAa,IACZF,EACHG,EAAGP,EAAMQ,SAEb5C,KAAK6C,kBAAmBC,EAAAA,EAAAA,IAAgBJ,EAAYA,EAAWC,EACnE,CACJ,YAEU,IAAII,SAAQ,CAACC,EAASC,KACxB,IAAKb,EAAMc,MACP,OAEJ,MAAMC,EAAMC,SAASC,cAAc,OACnCF,EAAIG,iBAAiB,QAAQ,KACzBtD,KAAKuD,YAAc,CACfL,MAAOC,EACPP,QAASR,EAAMQ,SAEnBI,GAAS,IAEbG,EAAIG,iBAAiB,SAAUE,IAC3BP,EAAOO,EAAIC,MAAM,IAErBN,EAAIO,IAAMtB,EAAMc,KAAK,GAE7B,EAEJlD,KAAK2D,WAAa,KACd,MAAMC,EAAU5D,KAAK4D,QAASC,EAAU7D,KAAKD,UAAUsC,cACvD,GAAKuB,EAAL,CAGI5D,KAAK8D,aACL9D,KAAK+D,gBAAiBC,EAAAA,EAAAA,IAAW,CAAC,EAAGJ,EAAQtE,OAC7CU,KAAKiE,uBAGLjE,KAAKkE,sBAET,IAAK,MAAMlF,KAAO6E,EAAQvE,MAAO,CAC7B,IAAKN,IAAQ6E,EAAQvE,MACjB,SAEJ,MAAMK,EAAQkE,EAAQvE,MAAMN,GACvBW,GAGLiE,EAAQtE,MAAMM,YAAYZ,EAAKW,EAAO,YAC1C,CAjBA,CAiBA,EAEJK,KAAKmE,WAAahC,UACd,MAA8CiC,EAA9BpE,KAAKD,UAAUsC,cAA+BgC,UAAUC,KAAKF,MAAOG,EAAYH,EAAMnD,KACtG,IAAKmD,EAAMI,OACP,OAEJ,MAA2B5B,EAAH,EAA+BwB,EAAM3E,OAC7D,GAAI8E,EAAUhC,MAAO,CACjB,MAAMkC,GAAYhC,EAAAA,EAAAA,IAAgB8B,EAAUhC,OAC5C,IAAKkC,EACD,OAEJzE,KAAK0E,WAAa,CACdnC,MAAO,IACAkC,GAEP7B,UAER,YAEU,IAAIG,SAAQ,CAACC,EAASC,KACxB,IAAKsB,EAAUrB,MACX,OAEJ,MAAMC,EAAMC,SAASC,cAAc,OACnCF,EAAIG,iBAAiB,QAAQ,KACzBtD,KAAK0E,WAAa,CACdxB,MAAOC,EACPP,WAEJI,GAAS,IAEbG,EAAIG,iBAAiB,SAAUE,IAC3BP,EAAOO,EAAIC,MAAM,IAErBN,EAAIO,IAAMa,EAAUrB,KAAK,GAEjC,EAEJlD,KAAK2E,WAAcC,IACf5E,KAAK6E,MAAMpE,IAAQqE,EAAAA,EAAAA,IAAUrE,EAAKT,KAAK+E,KAAMH,IAAW,EAE5D5E,KAAKgF,YAAc,CAAC9B,EAAON,KACvB5C,KAAK6E,MAAMpE,IAAQwE,EAAAA,EAAAA,IAAWxE,EAAKT,KAAK+E,KAAM7B,EAAON,IAAS,EAElE5C,KAAKkF,aAAe,KAChB,MAAMtB,EAAU5D,KAAK4D,QAChBA,IAGL5D,KAAKmF,uBAAuBC,GAAaA,EAASC,eAClDrF,KAAK2D,aACL3D,KAAKsF,iBACLtF,KAAKmF,uBAAuBC,GAAaA,EAASG,QAAQ3B,EAAS,CAAE4B,YAAY,MAAQ,EAE7FxF,KAAKkE,oBAAsB,KACvB,MAAMN,EAAU5D,KAAK4D,QAAS6B,EAAgBzF,KAAK+D,eAC7CH,GAAW6B,GAGjBrG,EAASwE,EAAS6B,EAAc,EAEpCzF,KAAKmF,sBAAyBO,IACrB1F,KAAK2F,mBAGVD,EAAS1F,KAAK2F,kBAAkB,EAEpC3F,KAAKiE,oBAAsB,KACvB,MAAML,EAAU5D,KAAK4D,QACrB,IAAKA,EACD,OAGJxE,EAASwE,EAAS,CACdgC,SAAU,QACVC,OAAQ7F,KAAKD,UAAUsC,cAAcyD,WAAWD,OAAOE,SAH7C,IAIVC,IAAK,IACLC,KAAM,IACNC,MAAO,OACPC,OAAQ,SACT,EAAK,EAEZnG,KAAK+E,KAAO,CACRoB,OAAQ,EACRD,MAAO,GAEXlG,KAAKoG,SAAW,KAChBpG,KAAKqG,YAAa,EAClBrG,KAAKc,iBAAmB,GACxBd,KAAKI,kBAAoB,GACzBJ,KAAKwB,eAAiB,GACtBxB,KAAK8B,cAAgB,EACzB,CACA,eAAIgC,GACA,OAAO9D,KAAKD,UAAUsC,cAAcyD,WAAWtB,MACnD,CACA8B,KAAAA,GACI,MAAMzC,EAAU7D,KAAKD,UAAUsC,cAAe+B,EAAQP,EAAQQ,UAAUC,KAAKF,MAAOG,EAAYvE,KAAK0E,WACjGb,EAAQvB,eAAekC,OACvBxE,KAAKuG,QAEAnC,EAAMI,QAAUJ,EAAM3E,OAJkG,GAIxE8E,EACjDA,EAAUhC,MACVvC,KAAK2E,YAAW7B,EAAAA,EAAAA,IAAgByB,EAAUhC,MAAOgC,EAAU3B,UAEtD2B,EAAUrB,OACflD,KAAKgF,YAAYT,EAAUrB,MAAOqB,EAAU3B,SAG3CiB,EAAQyC,OACbtG,KAAK6E,MAAMpE,KACP6F,EAAAA,EAAAA,IAAM7F,EAAKT,KAAK+E,KAAK,GAGjC,CACAyB,OAAAA,GAEI,GADAxG,KAAKyG,OACDzG,KAAKqG,WAAY,CACjB,MAAMzC,EAAU5D,KAAK4D,QACd,OAAPA,QAAO,IAAPA,GAAAA,EAAS8C,QACb,MAEI1G,KAAKkE,sBAETlE,KAAKc,iBAAmB,GACxBd,KAAKI,kBAAoB,GACzBJ,KAAKwB,eAAiB,GACtBxB,KAAK8B,cAAgB,EACzB,CACA+C,IAAAA,CAAK8B,GACD,MAAMlG,EAAMT,KAAKoG,SACjB,GAAK3F,EAGL,OAAOkG,EAAGlG,EACd,CACAmG,SAAAA,CAAUD,GACN,MAAMlG,EAAMT,KAAKoG,SACjB,OAAK3F,EAGEkG,EAAGlG,GAFCsC,QAAQC,aAAQ7D,EAG/B,CACA,kBAAM0H,CAAa3G,EAAU4G,GAAO,IAAAC,EAChC,GAAI7G,EAAS8G,UAAY9G,EAAS+G,UAC9B,OAEJ,MAAMvG,EAASR,EAASgH,YACxB,GAAIxG,GAD+C,EAE/C,OAEJ,MAAMyG,EAAUjH,EAASkH,eAAgBC,EAAmC,QAA5BN,EAAG7G,EAASoH,wBAAgB,IAAAP,EAAAA,EAAII,EAChF,IAAKvF,EAAQC,GAAU7B,KAAK2B,yBAAyBzB,GAChD0B,IACDA,EAASuF,GAERtF,IACDA,EAASwF,IAERzF,GAAWC,UAGV7B,KAAK4G,WAAUzE,UAAe,IAAAoF,EAAAC,EAAAC,EAAAC,EAChC,MAAM3H,EAAYC,KAAKD,UAAW8D,EAAU9D,EAAUsC,cAAesF,EAAgBzH,EAAS2D,QAAQgC,OAAgC+B,EAAH,EAAuC1H,EAAS0H,aAAcC,EAAiBD,GAAgBD,EAAcG,YAAiClF,EAA4D,QAArD2E,EAA0B,QAA1BC,EAAGtH,EAAS6H,OAAOnF,eAAO,IAAA4E,EAAAA,EAAoB,QAApBC,EAAIvH,EAAS0C,eAAO,IAAA6E,OAAA,EAAhBA,EAAkB9H,aAAK,IAAA4H,EAAAA,EAA/D,EAAsI5G,EAAWiC,EAAUiF,EAAgBG,GAAlD,QAAzBN,EAAGxH,EAAS+H,qBAAa,IAAAP,EAAAA,EAAI9E,GAA+EiF,EAAgBhH,EAAY,CAAC,EAAGD,EAAc,CACpgBK,KAAMW,GAASsG,EAAAA,EAAAA,IAAgBtG,EAAQjB,QAAYxB,GAEvDyB,EAAYM,OAASW,GAASqG,EAAAA,EAAAA,IAAgBrG,EAAQmG,GAAkBpH,EAAYK,KACpFjB,KAAKQ,sBAAsBC,EAAKP,EAAUQ,EAAQC,EAAUC,EAAaC,SACnEgG,EAAAA,EAAAA,IAAa,CACf9G,YACAoI,QAAS1H,EACTP,WACA4G,QACAlG,cACA0B,eAAgBuB,EAAQvB,eAAekC,OACvC4D,UAAWvE,EAAQvB,eAAe8F,UAClC1H,OAAQA,EAASkH,GAAgBD,EAAcU,SAC/CzF,QAASjC,EACT2H,OAAQpI,EAAS2D,QAAQyE,OACzBzH,cAEJb,KAAKC,uBAAuBC,EAAS,GAE7C,CACA,wBAAMqI,CAAmBhH,EAAQrB,EAAU4G,SACjC9G,KAAK4G,WAAWnG,IAAQ8H,EAAAA,EAAAA,IAAmB9H,EAAKc,EAAQrB,EAAU4G,IAC5E,CACA,gBAAM0B,CAAWjH,EAAQuF,SACf9G,KAAK4G,WAAWnG,IAAQ+H,EAAAA,EAAAA,IAAW/H,EAAKc,EAAQuF,IAC1D,CACA,UAAM2B,GACFzI,KAAKmF,uBAAuBuD,GAAQA,EAAIrD,eACxCrF,KAAK2F,mBAAoBgD,EAAAA,EAAAA,KAAsBC,IAC3C,IAAK,MAAMC,KAAUD,EACG,eAAhBC,EAAOC,MAAkD,UAAzBD,EAAOE,eACvC/I,KAAKkF,cAEb,IAEJlF,KAAK0B,SACL1B,KAAK2D,mBACC3D,KAAKkC,aACX,UACUlC,KAAKmE,YACf,CACA,MAAO6E,IACHC,EAAAA,EAAAA,MAAYxF,MAAMuF,EACtB,CACAhJ,KAAKsF,iBACLtF,KAAKmF,uBAAuBuD,IACnB1I,KAAK4D,SAGV8E,EAAInD,QAAQvF,KAAK4D,QAAS,CAAE4B,YAAY,GAAO,IAEnDxF,KAAKkJ,eACLlJ,KAAKmJ,cACLnJ,KAAKuG,OACT,CACAjB,cAAAA,GACI,MAA8C8D,EAA9BpJ,KAAKD,UAAUsC,cAAoC+G,WAAYxF,EAAU5D,KAAK4D,QAC9F,IAAKA,EACD,OAEJ,MAAMlE,EAAekE,EAAQtE,MAC7B,GAAKI,EAAL,CAGA,GAAI0J,EAAW7G,MAAO,CAClB,MAAMA,GAAQE,EAAAA,EAAAA,IAAgB2G,EAAW7G,OACzC7C,EAAa2J,gBAAkB9G,GAAQO,EAAAA,EAAAA,IAAgBP,EAAO6G,EAAWxG,SAAW,EACxF,MAEIlD,EAAa2J,gBAAkB,GAEnC3J,EAAa4J,gBAAkBF,EAAWlG,OAAS,GACnDxD,EAAa6J,mBAAqBH,EAAWxD,UAAY,GACzDlG,EAAa8J,iBAAmBJ,EAAWK,QAAU,GACrD/J,EAAagK,eAAiBN,EAAWrE,MAAQ,EAXjD,CAYJ,CACAoE,WAAAA,GACInJ,KAAKwB,eAAiB,GACtB,IAAK,MAAO,CAAED,KAAWvB,KAAKD,UAAU4J,QAAS,KAAAC,EACzCrI,EAAOG,QACP1B,KAAKwB,eAAeqI,KAAKtI,IAED,QAA5BqI,EAAIrI,EAAOQ,yBAAiB,IAAA6H,EAAAA,EAAIrI,EAAOU,sBACnCjC,KAAK8B,cAAc+H,KAAKtI,EAEhC,CACJ,CACA2H,YAAAA,GACIlJ,KAAKc,iBAAmB,GACxBd,KAAKI,kBAAoB,GACzB,IAAK,MAAMD,KAAWH,KAAKD,UAAUsE,UAAUyF,SAAU,KAAAC,EAAAC,EACjD7J,EAAQG,WACRN,KAAKI,kBAAkByJ,KAAK1J,IAEwB,QAAxD4J,EAA0B,QAA1BC,EAAI7J,EAAQa,sBAAc,IAAAgJ,EAAAA,EAAI7J,EAAQgB,0BAAkB,IAAA4I,EAAAA,EAAI5J,EAAQkB,aAChErB,KAAKc,iBAAiB+I,KAAK1J,EAEnC,CACJ,CACA8J,UAAAA,CAAW5K,GACHW,KAAKqG,YAAcrG,KAAK4D,SACxB5D,KAAK4D,QAAQ8C,SAEjB1G,KAAKqG,WACDhH,EAAO6K,SAAWC,EAAAA,MAAsB9K,EAAO6K,QACF,SAAvC7K,EAAO6K,QAAQC,EAAAA,IACfnK,KAAKqG,WACfrG,KAAK4D,QAAUvE,EACfW,KAAK4D,QAAQwG,WAAa,OAC1BpK,KAAK+D,gBAAiBC,EAAAA,EAAAA,IAAW,CAAC,EAAGhE,KAAK4D,QAAQtE,OAClDU,KAAK+E,KAAKoB,OAAS9G,EAAOgL,aAC1BrK,KAAK+E,KAAKmB,MAAQ7G,EAAOiL,YACzBtK,KAAKoG,SAAWpG,KAAK4D,QAAQ2G,WAAW,MACxCvK,KAAKmF,uBAAuBuD,IACnB1I,KAAK4D,SAGV8E,EAAInD,QAAQvF,KAAK4D,QAAS,CAAE4B,YAAY,GAAO,IAEnDxF,KAAKD,UAAUyK,OAAO/B,OACtBzI,KAAKsF,gBACT,CACAiB,KAAAA,GACI,MAAM1C,EAAU7D,KAAKD,UAAUsC,cAC/BrC,KAAK6E,MAAMpE,IACHoD,EAAQvB,eAAekC,QAAUX,EAAQvB,eAAeF,QACxDkE,EAAAA,EAAAA,IAAM7F,EAAKT,KAAK+E,MACZ/E,KAAKuD,YACLvD,KAAKgF,YAAYhF,KAAKuD,YAAYL,MAAOlD,KAAKuD,YAAYX,SAErD5C,KAAK6C,iBACV7C,KAAK2E,WAAW3E,KAAK6C,kBAGrB7C,KAAK2E,cAIT3E,KAAK2E,YACT,GAER,CACAjD,MAAAA,GACI,IAAK1B,KAAK4D,QACN,OAAO,EAEX,MAAM7D,EAAYC,KAAKD,UAAW0K,EAAU1K,EAAUyK,OAAOE,WAAY3F,EAAOhF,EAAUV,OAAO0F,KAAM4F,EAC5F3K,KAAK4D,QAAQ0G,YAAcG,EADiEE,EAE3F3K,KAAK4D,QAAQyG,aAAeI,EAExC,GAAIE,IAAmB5F,EAAKoB,QACxBwE,IAAkB5F,EAAKmB,OACvByE,IAAmB3K,KAAK4D,QAAQuC,QAChCwE,IAAkB3K,KAAK4D,QAAQsC,MAC/B,OAAO,EAEX,MAAM0E,EAAU,IAAK7F,GASrB,OARA/E,KAAK4D,QAAQsC,MAAQnB,EAAKmB,MAAQlG,KAAK4D,QAAQ0G,YAAcG,EAC7DzK,KAAK4D,QAAQuC,OAASpB,EAAKoB,OAASnG,KAAK4D,QAAQyG,aAAeI,EAC5DzK,KAAKD,UAAU8K,SACf9K,EAAUsE,UAAUyG,gBAAgB,CAChC5E,MAAOnB,EAAKmB,MAAQ0E,EAAQ1E,MAC5BC,OAAQpB,EAAKoB,OAASyE,EAAQzE,UAG/B,CACX,CACAM,IAAAA,GACIzG,KAAKmF,uBAAuBuD,GAAQA,EAAIrD,eACxCrF,KAAK2F,uBAAoBxG,EACzBa,KAAK6E,MAAMpE,IAAQ6F,EAAAA,EAAAA,IAAM7F,EAAKT,KAAK+E,OACvC,CACA,kBAAMgG,GACF,IAAK/K,KAAK4D,UAAY5D,KAAK0B,SACvB,OAEJ,MAAM3B,EAAYC,KAAKD,UAAWiL,EAAejL,EAAUkL,4BACrDlL,EAAUsE,UAAU6G,aAC1BlL,KAAKsB,sBACD0J,SACMjL,EAAUoL,SAExB,EC5dJ,SAASC,EAAexH,EAASyH,EAAOC,EAASC,EAAK1H,GAClD,GAAI0H,EAAK,CACL,IAAIC,EAAa,CAAEC,SAAS,IACxBC,EAAAA,EAAAA,IAAU7H,GACV2H,EAAWG,QAAU9H,OAEJ1E,IAAZ0E,IACL2H,EAAa3H,GAEjBD,EAAQN,iBAAiB+H,EAAOC,EAASE,EAC7C,KACK,CACD,MAAMI,EAAgB/H,EACtBD,EAAQiI,oBAAoBR,EAAOC,EAASM,EAChD,CACJ,CACO,MAAME,EACThM,WAAAA,CAAYC,GACRC,KAAKD,UAAYA,EACjBC,KAAK+L,mBAAsB/C,IACvB,MAAMjJ,EAAYC,KAAKD,UAAW8D,EAAU9D,EAAUsC,cACtD,GAAIrC,KAAKgM,SAAU,CACf,MAAMC,EAAqBlM,EAAUmM,cAAcC,MAAOC,EAAWH,EAAmBrG,SACxF,IAAKwG,EACD,OAEJH,EAAmBI,cAAgB,IAAKD,GACxCH,EAAmBK,WAAY,IAAIC,MAAOC,UAC1C,MAAMC,EAAU5I,EAAQqI,cAAcQ,OAAOD,SAC7CE,EAAAA,EAAAA,IAA0BF,EAAQG,MAAOA,GAAS5M,KAAKD,UAAU8M,gBAAgBD,IACrF,CACA,GAAe,aAAX5D,EAAEF,KAAqB,CAEvBgE,YAAW,IAAM9M,KAAK+M,qBADH,IAEvB,GAEJ/M,KAAKgN,mBAAsBhE,IACvB,MAAMiE,EAAajE,EAAGjJ,EAAYC,KAAKD,UAAW8D,EAAU9D,EAAU8D,QAASqJ,EAAgBrJ,EAAQqJ,cAAeC,EAAYF,EAAWG,QAAUF,EAAcG,KAAOH,EAAcI,MAAOC,EAAQ1J,EAAQ2J,OAAOC,MAAMF,GAAUA,EAAMG,OAASP,IACnPI,GAASA,EAAMI,QAAQC,MAClB7N,EAAU8N,UAAUV,EAC7B,EAEJnN,KAAK8N,wBAA0B,KAC3B,MAAM/N,EAAYC,KAAKD,UAAW8D,EAAU9D,EAAUsC,cACtDrC,KAAK+M,oBACAlJ,EAAQkK,cAGT3K,UAAYA,SAAS4K,QACrBjO,EAAUkO,YAAa,EACvBlO,EAAUmO,UAGVnO,EAAUkO,YAAa,EACnBlO,EAAUoO,gBACVpO,EAAUqO,MAAK,GAGfrO,EAAU8E,MAAK,IAEvB,EAEJ7E,KAAKqO,oBAAsB,KACnBrO,KAAKsO,iBACLC,aAAavO,KAAKsO,uBACXtO,KAAKsO,gBAEhB,MAAME,EAAerM,UACjB,MAAM9C,EAASW,KAAKD,UAAUV,aAClB,OAANA,QAAM,IAANA,OAAM,EAANA,EAAQ0L,eAAc,EAEhC/K,KAAKsO,eAAiBxB,YAAW,KAAW0B,GAAc,GAAExO,KAAKD,UAAUsC,cAAc6J,cAAcQ,OAAOhL,OAAO+M,MAAQC,EAAAA,GAAsB,EAEvJ1O,KAAK2O,8BAAgC,CAACC,EAAoBrD,KACtD,MAAMsD,EAAW7O,KAAK8O,UAAW/O,EAAYC,KAAKD,UAAW8D,EAAU9D,EAAUsC,cAC3E0M,EAAkBhP,EAAUmM,cAActI,QAChD,IAAKmL,EACD,OAEJ,MAAMC,EAAOD,EAAiBE,EAAWlP,EAAUV,OAAOuE,QACtDqL,IACAA,EAAS3P,MAAM4P,cAAgBF,IAASC,EAAW,UAAY,SAE7DpL,EAAQqI,cAAcQ,OAAOyC,QAAQ3K,QAAUX,EAAQqI,cAAcQ,OAAOD,QAAQjI,UAG1F4G,EAAe2D,EAAiBK,EAAAA,GAAgBP,EAASQ,UAAW9D,GACpEH,EAAe2D,EAAiBO,EAAAA,GAAiBT,EAASU,WAAYhE,GACtEH,EAAe2D,EAAiBS,EAAAA,GAAgBX,EAASY,UAAWlE,GAC/D1H,EAAQqI,cAAcQ,OAAOD,QAAQjI,QAItC4G,EAAe2D,EAAiBW,EAAAA,GAAeb,EAASc,cAAepE,GACvEH,EAAe2D,EAAiBa,EAAAA,GAAcf,EAASgB,QAAStE,GAChEH,EAAe2D,EAAiBe,EAAAA,GAAgBjB,EAASkB,UAAWxE,IALpEH,EAAe2D,EAAiBW,EAAAA,GAAeb,EAASmB,SAAUzE,GAOtEH,EAAe2D,EAAiBH,EAAoBC,EAASoB,WAAY1E,GACzEH,EAAe2D,EAAiBmB,EAAAA,GAAkBrB,EAASsB,YAAa5E,GAAI,EAEhFvL,KAAKoQ,iBAAoB7E,IACrB,MAAMsD,EAAW7O,KAAK8O,UAAW/O,EAAYC,KAAKD,UAA8CsQ,EAAzBtQ,EAAUsC,cAAoC6J,cAAcoE,UAAWrB,EAAWlP,EAAUV,OAAOuE,QAC1K,IAAIgL,EAAqB2B,EAAAA,GACzB,GAAmB,WAAfF,EACAtQ,EAAUmM,cAActI,QAAU4M,OAClC5B,EAAqB6B,EAAAA,QAEpB,GAAmB,WAAfJ,GAA2BpB,EAAU,KAAAyB,EAC1C3Q,EAAUmM,cAActI,QAAgC,QAAzB8M,EAAGzB,EAAS0B,qBAAa,IAAAD,EAAAA,EAAIzB,EAAS2B,UACzE,MAEI7Q,EAAUmM,cAActI,QAAUqL,EAEtCjP,KAAK6Q,kBAAkBtF,GACvBvL,KAAK8Q,cAAcvF,GACnBvL,KAAK2O,8BAA8BC,EAAoBrD,GACnDnI,UACAgI,EAAehI,SAAU2N,EAAAA,GAAuBlC,EAASmC,iBAAkBzF,GAAK,EACpF,EAEJvL,KAAK6Q,kBAAqBtF,IACtB,MAAMsD,EAAW7O,KAAK8O,UAAWmC,GAAaC,EAAAA,EAAAA,IAAe,gCACxDD,SAG+B9R,IAAhC8R,EAAW3N,sBAIgBnE,IAA3B8R,EAAWE,cAGX5F,EACA0F,EAAWE,YAAYtC,EAASuC,gBAGhCH,EAAWI,eAAexC,EAASuC,iBAVnChG,EAAe6F,EAAY,SAAUpC,EAASyC,YAAa/F,GAW/D,EAEJvL,KAAK8Q,cAAiBvF,IAClB,MAAMsD,EAAW7O,KAAK8O,UAAW/O,EAAYC,KAAKD,UAClD,IADuEA,EAAUsC,cACpE6J,cAAcQ,OAAOhL,OAC9B,OAEJ,GAA8B,qBAAnB6P,eAEP,YADAnG,EAAeoF,OAAQgB,EAAAA,GAAa3C,EAASnN,OAAQ6J,GAGzD,MAAM0D,EAAWlP,EAAUV,OAAOuE,QAC9B5D,KAAKyR,kBAAoBlG,GACrB0D,GACAjP,KAAKyR,gBAAgBC,UAAUzC,GAEnCjP,KAAKyR,gBAAgBpM,oBACdrF,KAAKyR,kBAENzR,KAAKyR,iBAAmBlG,GAAO0D,IACrCjP,KAAKyR,gBAAkB,IAAIF,gBAAgBI,IACzBA,EAAQlE,MAAMzE,GAAMA,EAAE4I,SAAW3C,KAI/CjP,KAAKqO,qBAAqB,IAE9BrO,KAAKyR,gBAAgBlM,QAAQ0J,GACjC,EAEJjP,KAAK6R,WAAa,KACd,MAAM,cAAE3F,GAAkBlM,KAAKD,UAC/B,IAAKmM,EACD,OAEJ,MAAM,MAAEC,GAAUD,EAClBC,EAAM2F,UAAW,EACjB3F,EAAM4F,aAAe5F,EAAMvG,QAAQ,EAEvC5F,KAAKgS,iBAAoBhJ,IACrB,MAAMjJ,EAAYC,KAAKD,UAAW8D,EAAU9D,EAAUsC,eAAe,MAAE8J,GAAUpM,EAAUmM,cAC3FC,EAAM8F,QAAS,EACf,IAAIC,GAAU,EACd,MAAMC,EAAgBhG,EAAMvG,SAC5B,GAAKuM,GAAkBtO,EAAQqI,cAAcQ,OAAOD,QAAQjI,OAA5D,CAGA,IAAK,MAAO,CAAEjD,KAAWxB,EAAU4J,QAC/B,GAAKpI,EAAO6Q,qBAGZF,EAAU3Q,EAAO6Q,mBAAmBD,GAChCD,GACA,MAGHA,GACDlS,KAAK+L,mBAAmB/C,GAE5BmD,EAAM2F,UAAW,CAbjB,CAasB,EAE1B9R,KAAK+M,kBAAoB,KACrB,MAAMb,EAAgBlM,KAAKD,UAAUmM,cACrC,IAAKA,EACD,OAEJ,MAAMC,EAAQD,EAAcC,aACrBA,EAAMvG,gBACNuG,EAAME,qBACNF,EAAM4F,aACb7F,EAAcmG,OAAS9B,EAAAA,GACvBpE,EAAM8F,QAAS,EACf9F,EAAM2F,UAAW,CAAK,EAE1B9R,KAAKsS,gBAAmBtJ,IACpB,MAAMjJ,EAAYC,KAAKD,UAAW8D,EAAU9D,EAAUsC,cAAe6J,EAAgBnM,EAAUmM,cAAe+C,EAAWlP,EAAUV,OAAOuE,QAC1I,GAAkB,OAAbsI,QAAa,IAAbA,IAAAA,EAAetI,QAChB,OAGJ,IAAI2O,EACJ,GAFArG,EAAcC,MAAM8F,QAAS,EAEzBjJ,EAAEF,KAAK0J,WAAW,WAAY,CAC9BxS,KAAKgM,UAAW,EAChB,MAAMyG,EAAazJ,EACnB,GAAIkD,EAActI,UAAY4M,QAC1B,GAAIvB,EAAU,CACV,MAAMyD,EAAazD,EAAS0D,wBAC5BJ,EAAM,CACFK,EAAGH,EAAWI,QAAUH,EAAWzM,KACnC6M,EAAGL,EAAWM,QAAUL,EAAW1M,IAE3C,OAEC,GAAwC,WAApCnC,EAAQqI,cAAcoE,UAAwB,CACnD,MAAM0C,EAASP,EAAWb,OAAQA,EAASa,EAAWQ,cACtD,GAAID,GAAUpB,GAAU3C,EAAU,CAC9B,MAAMiE,EAAaF,EAAOL,wBAAyBQ,EAAavB,EAAOe,wBAAyBS,EAAanE,EAAS0D,wBACtHJ,EAAM,CACFK,EAAGH,EAAWY,QA5O3B,EA4O8CH,EAAWjN,MAAQkN,EAAWlN,KAAOmN,EAAWnN,MACjF6M,EAAGL,EAAWa,QA7O3B,EA6O8CJ,EAAWlN,KAAOmN,EAAWnN,IAAMoN,EAAWpN,KAEvF,KACK,KAAAuN,EAAAC,EACDjB,EAAM,CACFK,EAAqB,QAApBW,EAAEd,EAAWY,eAAO,IAAAE,EAAAA,EAAId,EAAWI,QACpCC,EAAqB,QAApBU,EAAEf,EAAWa,eAAO,IAAAE,EAAAA,EAAIf,EAAWM,QAE5C,CACJ,MACK,GAAIN,EAAWb,SAAW3C,EAAU,KAAAwE,EAAAC,EACrCnB,EAAM,CACFK,EAAqB,QAApBa,EAAEhB,EAAWY,eAAO,IAAAI,EAAAA,EAAIhB,EAAWI,QACpCC,EAAqB,QAApBY,EAAEjB,EAAWa,eAAO,IAAAI,EAAAA,EAAIjB,EAAWM,QAE5C,CACJ,MAGI,GADA/S,KAAKgM,SAAsB,cAAXhD,EAAEF,KACdmG,EAAU,KAAA0E,EAAAC,EACV,MAAMC,EAAa7K,EAAG8K,EAAe,EAAGC,EAAYF,EAAWG,QAAQH,EAAWG,QAAQvU,OAASqU,GAAeV,EAAanE,EAAS0D,wBAAyBsB,EAAoB,EACrL1B,EAAM,CACFK,EAAGmB,EAAUlB,SAA0B,QAAnBc,EAAIP,EAAWnN,YAAI,IAAA0N,EAAAA,EAAIM,GAC3CnB,EAAGiB,EAAUhB,SAAyB,QAAlBa,EAAIR,EAAWpN,WAAG,IAAA4N,EAAAA,EAAIK,GAElD,CAEJ,MAAMxJ,EAAU1K,EAAUyK,OAAOE,WAC7B6H,IACAA,EAAIK,GAAKnI,EACT8H,EAAIO,GAAKrI,GAEbyB,EAAcC,MAAMvG,SAAW2M,EAC/BrG,EAAcmG,OAASjD,EAAAA,EAAc,EAEzCpP,KAAKkU,UAAalL,IACd,MAAMxF,EAAMwF,EAAGgL,EAAUG,MAAMC,KAAK5Q,EAAI6Q,gBACxC,IAAK,MAAMC,KAASN,EAChBhU,KAAKuU,SAASC,OAAOF,EAAMG,YAE/BzU,KAAK+M,mBAAmB,EAE5B/M,KAAK0U,eAAkB1L,IACnB,MAAMxF,EAAMwF,EAAGgL,EAAUG,MAAMC,KAAK5Q,EAAI6Q,gBACxC,IAAK,MAAMC,KAASN,EAChBhU,KAAKuU,SAASC,OAAOF,EAAMG,YAE/BzU,KAAKgS,iBAAiBhJ,EAAE,EAE5BhJ,KAAK2U,YAAe3L,IAChB,MAAMxF,EAAMwF,EAAGgL,EAAUG,MAAMC,KAAK5Q,EAAI6Q,gBACxC,IAAK,MAAMC,KAASN,EAChBhU,KAAKuU,SAASK,IAAIN,EAAMG,WAAYI,YAAYC,OAEpD9U,KAAKsS,gBAAgBtJ,EAAE,EAE3BhJ,KAAKgM,UAAW,EAChBhM,KAAKuU,SAAW,IAAIQ,IACpB/U,KAAK8O,UAAY,CACbiB,UAAWA,IAAM/P,KAAK6R,aACtB5B,WAAYA,IAAMjQ,KAAK+M,oBACvBsC,UAAYrG,GAAMhJ,KAAKsS,gBAAgBtJ,GACvC6G,QAAU7G,GAAMhJ,KAAKgS,iBAAiBhJ,GACtCuG,WAAavG,GAAMhJ,KAAK2U,YAAY3L,GACpCyG,UAAYzG,GAAMhJ,KAAKsS,gBAAgBtJ,GACvCgH,SAAWhH,GAAMhJ,KAAKkU,UAAUlL,GAChCmH,YAAcnH,GAAMhJ,KAAKkU,UAAUlL,GACnC2G,cAAgB3G,GAAMhJ,KAAK0U,eAAe1L,GAC1CgI,iBAAkBA,IAAMhR,KAAK8N,0BAC7BwD,YAActI,GAAMhJ,KAAKgN,mBAAmBhE,GAC5CoI,eAAiBpI,GAAMhJ,KAAKgN,mBAAmBhE,GAC/CtH,OAAQA,KACJ1B,KAAKqO,qBAAqB,EAGtC,CACA2G,YAAAA,GACIhV,KAAKoQ,kBAAiB,EAC1B,CACA6E,eAAAA,GACIjV,KAAKoQ,kBAAiB,EAC1B,E,cChUG,MAAM8E,EACTpV,WAAAA,CAAYqV,EAAQpV,GAChBC,KAAKD,UAAYA,EACjBC,KAAKoV,QAAUD,EACfnV,KAAKqV,aAAe,GACpBrV,KAAKsV,qBAAuB,GAC5BtV,KAAKuV,qBAAuB,EAChC,CACA,sBAAMC,CAAiB1O,GACnB,IAAK,MAAM2O,KAAczV,KAAKsV,qBACtBG,EAAWC,mBACLD,EAAWE,SAAS7O,EAGtC,CACA+F,eAAAA,CAAgBD,GACZ,IAAK,MAAM6I,KAAczV,KAAKsV,qBAAsB,KAAAM,EACtB,QAA1BA,EAAAH,EAAW5I,uBAAe,IAAA+I,GAA1BA,EAAArV,KAAAkV,EAA6B7I,EACjC,CACJ,CACA,UAAMnE,GACFzI,KAAKqV,mBAAqBrV,KAAKoV,QAAQS,eAAe7V,KAAKD,WAAW,GACtEC,KAAKsV,qBAAuB,GAC5BtV,KAAKuV,qBAAuB,GAC5B,IAAK,MAAME,KAAczV,KAAKqV,aAAc,CACxC,OAAQI,EAAW3M,MACf,IAAK,WACD9I,KAAKsV,qBAAqBzL,KAAK4L,GAC/B,MACJ,IAAK,YACDzV,KAAKuV,qBAAqB1L,KAAK4L,GAGvCA,EAAWhN,MACf,CACJ,CACA,uBAAMqN,CAAkB5V,EAAU4G,GAC9B,IAAK,MAAM2O,KAAczV,KAAKsV,qBAC1BG,EAAWnP,MAAMpG,EAAU4G,GAE/B,IAAK,MAAM2O,KAAczV,KAAKuV,qBACtBE,EAAWC,UAAUxV,UACfuV,EAAWE,SAASzV,EAAU4G,EAGhD,CACAiP,KAAAA,CAAM7V,GACF,IAAK,MAAMuV,KAAczV,KAAKsV,qBACtBG,EAAWC,aACXD,EAAWM,MAAM7V,GAGzB,IAAK,MAAMuV,KAAczV,KAAKuV,qBACtBE,EAAWC,UAAUxV,IACrBuV,EAAWM,MAAM7V,EAG7B,ECzDG,MAAM8V,EACTlW,WAAAA,CAAY8F,EAAU1F,GAClBF,KAAK4F,SAAWA,EAChB5F,KAAKE,SAAWA,CACpB,E,iCCDJ,MAAM+V,EAAO,GACN,MAAMC,EACTpW,WAAAA,CAAYqW,EAAWC,GACnBpW,KAAKmW,UAAYA,EACjBnW,KAAKoW,SAAWA,EAChBpW,KAAKqW,WAAa,KACd,MAAM,EAAEzD,EAAC,EAAEE,GAAM9S,KAAKmW,UAAUvQ,UAAU,MAAEM,EAAK,OAAEC,GAAWnG,KAAKmW,UAAUpR,MAAM,SAAEqR,GAAapW,KAClG,IAAK,IAAIsW,EAAI,EAAGA,EAPmB,EAOCA,IAAK,CACrC,MAAMC,EAAaD,EARR,EASXtW,KAAKwW,MAAM3M,KAAK,IAAIqM,EAAS,IAAIO,EAAAA,EAAU7D,EAAI1M,EAAQ+P,EAAOM,EAAYzD,EAAI3M,EAAS8P,GAAQS,KAAKC,MAAML,EAAIL,GAAQM,GAAarQ,EAAQ+P,EAAM9P,EAAS8P,GAAOG,GACrK,CACApW,KAAK4W,UAAW,CAAI,EAExB5W,KAAK6W,QAAU,GACf7W,KAAK4W,UAAW,EAChB5W,KAAKwW,MAAQ,EACjB,CACAM,MAAAA,CAAOC,GACH,QAAK/W,KAAKmW,UAAUa,SAASD,EAAMnR,YAG/B5F,KAAK6W,QAAQpX,OAASO,KAAKoW,UAC3BpW,KAAK6W,QAAQhN,KAAKkN,IACX,IAEN/W,KAAK4W,UACN5W,KAAKqW,aAEFrW,KAAKwW,MAAMS,MAAMC,GAAQA,EAAIJ,OAAOC,MAC/C,CACAI,KAAAA,CAAMC,EAAOC,EAAOC,GAChB,MAAMC,EAAW,OAALD,QAAK,IAALA,EAAAA,EAAS,GACrB,IAAKF,EAAMI,WAAWxX,KAAKmW,WACvB,MAAO,GAEX,IAAK,MAAMsB,KAAKzX,KAAK6W,SACZO,EAAMJ,SAASS,EAAE7R,YAClB8R,EAAAA,EAAAA,IAAYN,EAAMxR,SAAU6R,EAAE7R,UAAY6R,EAAEvX,SAASgH,eACnDmQ,GAASA,EAAMI,EAAEvX,YAGvBqX,EAAI1N,KAAK4N,EAAEvX,UAEf,GAAIF,KAAK4W,SACL,IAAK,MAAMM,KAAOlX,KAAKwW,MACnBU,EAAIC,MAAMC,EAAOC,EAAOE,GAGhC,OAAOA,CACX,CACAI,WAAAA,CAAY/R,EAAUlF,EAAQ2W,GAC1B,OAAOrX,KAAKmX,MAAM,IAAIS,EAAAA,EAAOhS,EAASgN,EAAGhN,EAASkN,EAAGpS,GAAS2W,EAClE,CACAQ,cAAAA,CAAejS,EAAUb,EAAMsS,GAC3B,OAAOrX,KAAKmX,MAAM,IAAIV,EAAAA,EAAU7Q,EAASgN,EAAGhN,EAASkN,EAAG/N,EAAKmB,MAAOnB,EAAKoB,QAASkR,EACtF,ECpDJ,MACMS,EAAkBC,IACpB,MAAM,OAAE5R,EAAM,MAAED,GAAU6R,EAC1B,OAAO,IAAItB,EAAAA,GADuC,IACjBvQ,GADiB,IACEC,EADkB,IACGD,EADH,IACuBC,EAAO,EAEjG,MAAM6R,EACTlY,WAAAA,CAAYqV,EAAQpV,GAAW,IAAAkY,EAAA,KAC3BjY,KAAKkY,WAAa,WAAkB,QAAAC,EAAA3Y,UAAAC,OAAd4E,EAAS,IAAA8P,MAAAgE,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAT/T,EAAS+T,GAAA5Y,UAAA4Y,GAC3B,IAAK,MAAMlY,KAAYmE,EACnB4T,EAAKI,MAAMxO,KAAK3J,EAExB,EACAF,KAAKsY,cAAgBnW,MAAO0B,EAAS0U,EAAaC,KAAU,IAAAC,EACxD,MAAMC,EAAgB7U,EAAQ8U,OAC9B,GAA2B,QAAvBF,EAAC5U,EAAQ8U,OAAOC,eAAO,IAAAH,IAAtBA,EAAwBjU,OAOzB,iBANcrF,IAAVqZ,EACAxY,KAAK6Y,OAASH,EAAcI,MAAMnZ,MAE7B+Y,EAAcI,OACnB9Y,KAAK+Y,aAAanE,IAAI4D,EAAOE,EAAcI,MAAMnZ,QAIzD,MAAMqZ,EAAgBhZ,KAAKiZ,mBAAmBP,EAAcE,SAAUM,EAAqBR,EAAc/Y,MAAqBwZ,EAAoBT,EAAcI,MAAMnZ,MAA3C,EAA8D+Y,EAAcI,MAAMnZ,MAAQuZ,EAAoBE,EAAkB1C,KAAK2C,IAAIH,EAAoBC,GAAqBH,EAAgBT,EAAae,EAAiB5C,KAAK2C,IAAIrZ,KAAKuZ,MAAOvZ,KAAKwZ,QAAQC,GAAMA,EAAEjB,QAAUA,IAAO/Y,aACxYN,IAAVqZ,EACAxY,KAAK6Y,OAASH,EAAcI,MAAMnZ,MAAQqZ,EAG1ChZ,KAAK+Y,aAAanE,IAAI4D,EAAOE,EAAcI,MAAMnZ,MAAQqZ,GAEzDM,EAAiBF,QACXpZ,KAAK6J,KAAK6M,KAAKgD,IAAIN,EAAkBE,QAAiBna,EAAW0E,EAAS2U,GAE3Ec,EAAiBF,GACtBpZ,KAAK2Z,eAAeL,EAAiBF,EAAiBZ,EAC1D,EAEJxY,KAAKiZ,mBAAsBW,IACvB,MAAM7Z,EAAYC,KAAK6Z,WACvB,IAAK9Z,EAAUV,OAAOuE,UAAYgW,EAAepV,OAC7C,OAF+C,EAInD,MAAMnF,EAASU,EAAUV,OAAOuE,QAAS6G,EAAU1K,EAAUyK,OAAOE,WACpE,OAAQrL,EAAO6G,MAAQ7G,EAAO8G,QAAWyT,EAAezT,OAASyT,EAAe1T,MAAQuE,GA3C/D,EA2CoF,EAEjHzK,KAAK8Z,cAAgB3X,MAAOyD,EAAUmU,EAAiBvB,EAAOwB,KAC1D,IACI,IAAI9Z,EAAWF,KAAKqY,MAAM4B,MAC1B,IAAK/Z,EAAU,CACX,MAAM,SAAEga,SAAmB,+BAC3Bha,EAAW,IAAIga,EAASla,KAAKoV,QAASpV,KAAK6Z,WAC/C,OACM3Z,EAASuI,KAAKzI,KAAKma,QAASvU,EAAUmU,EAAiBvB,GAC7D,IAAI4B,GAAS,EAIb,GAHIJ,IACAI,EAASJ,EAAY9Z,KAEpBka,EACD,OAWJ,OATApa,KAAKqa,OAAOxQ,KAAK3J,GACjBF,KAAKsa,QAAQzQ,KAAK3J,GAClBF,KAAKma,UACLna,KAAKoV,QAAQmF,cAAc,gBAAiB,CACxCxa,UAAWC,KAAK6Z,WAChBW,KAAM,CACFta,cAGDA,CACX,CACA,MAAO8I,IACHC,EAAAA,EAAAA,MAAYwR,QAAQ,GAADC,OAAIC,EAAAA,GAAW,sBAAAD,OAAqB1R,GAC3D,GAEJhJ,KAAK4a,gBAAkB,CAACC,EAAOrC,EAAOsC,KAClC,MAAM5a,EAAWF,KAAKqa,OAAOQ,GAC7B,IAAK3a,GAAYA,EAASsY,QAAUA,EAChC,OAAO,EAEX,MAAMuC,EAAO/a,KAAKsa,QAAQU,QAAQ9a,GAWlC,OAVAF,KAAKqa,OAAOY,OAAOJ,EADwC,GAE3D7a,KAAKsa,QAAQW,OAAOF,EAFuC,GAG3D7a,EAASsG,QAAQsU,GACjB9a,KAAKoV,QAAQmF,cAAc,kBAAmB,CAC1Cxa,UAAWC,KAAK6Z,WAChBW,KAAM,CACFta,cAGRF,KAAKkY,WAAWhY,IACT,CAAI,EAEfF,KAAKoV,QAAUD,EACfnV,KAAK6Z,WAAa9Z,EAClBC,KAAKma,QAAU,EACfna,KAAKqa,OAAS,GACdra,KAAKsa,QAAU,GACfta,KAAKqY,MAAQ,GACbrY,KAAK6Y,OAAS,EACd7Y,KAAK+Y,aAAe,IAAIhE,IACxB/U,KAAKkb,YAAa,EAClBlb,KAAKmb,YAAc,EACnBnb,KAAKob,oBAAsB,IAAIlG,EAAmBC,EAAQpV,GAC1DC,KAAKqb,qBAAsB,EAC3B,MAAMtD,EAAahY,EAAUV,OAAO0F,KACpC/E,KAAKsb,SAAW,IAAIpF,EAAS4B,EAAeC,GA1G9B,GA2Gd/X,KAAKub,OAAS,GACdvb,KAAK8J,SAAW,EACpB,CACA,SAAIyP,GACA,OAAOvZ,KAAKqa,OAAO5a,MACvB,CACA,wBAAM+b,GACF,MAAMzb,EAAYC,KAAK6Z,WAAYhW,EAAU9D,EAAUsC,cACvD,IAAK,MAAMnC,KAAY2D,EAAQ4X,sBACrBzb,KAAK0b,YAAYxb,EAAS0F,UAAW+V,EAAAA,EAAAA,IAAYzb,EAAS0F,SAAU7F,EAAUV,OAAO0F,WAAQ5F,EAAWe,EAAS2D,QAE/H,CACA,iBAAM6X,CAAY9V,EAAUmU,EAAiBvB,EAAOwB,GAAa,IAAA4B,EAC7D,MAAMC,EAAe7b,KAAK6Z,WAAWxX,cAAcgC,UAAUsU,OAAOG,MAAOA,OAAkB3Z,IAAVqZ,EAAsBxY,KAAK6Y,OAAqC,QAA/B+C,EAAG5b,KAAK+Y,aAAa+C,IAAItD,UAAM,IAAAoD,EAAAA,EAAI5b,KAAK6Y,OAAQkD,EAAe/b,KAAKuZ,MACxL,GAAIT,EADsM,EAEtM,GAA0B,WAAtB+C,EAAajP,KAAmB,CAChC,MAAqCoP,EAAgBD,EAAjC,EAA8DjD,EAC9EkD,EAD8B,GAE9Bhc,KAAK2Z,eAAeqC,EAE5B,MACK,GAA0B,SAAtBH,EAAajP,MACdmP,GAAgBjD,EAChB,OAIZ,aAAa9Y,KAAK8Z,cAAclU,EAAUmU,EAAiBvB,EAAOwB,EACtE,CACA1T,KAAAA,GACItG,KAAKqa,OAAS,GACdra,KAAKsa,QAAU,GACfta,KAAKqb,qBAAsB,CAC/B,CACA7U,OAAAA,GACIxG,KAAKqa,OAAS,GACdra,KAAKsa,QAAU,GACfta,KAAKub,OAAS,GACdvb,KAAK8J,SAAW,EACpB,CACA,UAAMjF,CAAKiC,GACP,MAAM/G,EAAYC,KAAK6Z,WAAYxa,EAASU,EAAUV,OACtDA,EAAOiH,cACDtG,KAAKic,OAAOnV,GAClB,IAAK,MAAO,CAAEvF,KAAWxB,EAAU4J,cACzBtK,EAAOmJ,WAAWjH,EAAQuF,GAEpC,IAAK,MAAM2Q,KAAKzX,KAAKsa,cACX7C,EAAE5S,KAAKiC,EAErB,CACA0S,MAAAA,CAAO0C,GACH,OAAOlc,KAAKqa,OAAOb,OAAO0C,EAC9B,CACAzO,IAAAA,CAAKyO,GACD,OAAOlc,KAAKqa,OAAO5M,KAAKyO,EAC5B,CACAJ,GAAAA,CAAIjB,GACA,OAAO7a,KAAKqa,OAAOQ,EACvB,CACAhO,eAAAA,CAAgBD,GACZ5M,KAAKob,oBAAoBvO,gBAAgBD,EAC7C,CACA,UAAMnE,GACF,MAAM1I,EAAYC,KAAK6Z,WAAYhW,EAAU9D,EAAUsC,cACvDrC,KAAKmb,YAAc,EACnBnb,KAAKkb,YAAa,QACZlb,KAAKmJ,cACX,IAAI+I,GAAU,EACd,IAAK,MAAO,CAAE3Q,KAAWxB,EAAU4J,QAI/B,QAHuCxK,IAAnCoC,EAAO4a,0BACPjK,EAAU3Q,EAAO4a,2BAEjBjK,EACA,MAIR,SADMlS,KAAKwb,sBACNtJ,EAAS,CACV,MAAMkK,EAAmBvY,EAAQQ,UAAWgY,EAASD,EAAiBC,OACtE,IAAK,MAAM7D,KAAS6D,EAAQ,CACxB,MAAMC,EAAeD,EAAO7D,GAC5B,IAAK,IAAIlC,EAAItW,KAAKuZ,MAAOgD,EAAI,EAAGA,GAAuB,QAAtBC,EAAGF,EAAa3D,cAAM,IAAA6D,OAAA,EAAnBA,EAAqB7c,QAAS2W,EAAI8F,EAAiBzD,OAAOhZ,MAAO2W,IAAKiG,IAAK,KAAAC,QACrGxc,KAAK0b,iBAAYvc,EAAWmd,EAAc9D,EACpD,CACJ,CACA,IAAK,IAAIlC,EAAItW,KAAKuZ,MAAOjD,EAAI8F,EAAiBzD,OAAOhZ,MAAO2W,UAClDtW,KAAK0b,aAEnB,CACJ,CACA,iBAAMvS,GACF,GAAInJ,KAAKqb,oBACL,OAEJ,MAAMtb,EAAYC,KAAK6Z,WACvB7Z,KAAKub,aAAevb,KAAKoV,QAAQqH,UAAU1c,GAAW,GACtDC,KAAK8J,eAAiB9J,KAAKoV,QAAQsH,YAAY3c,GAAW,SACpDC,KAAKob,oBAAoB3S,OAC/B,IAAK,MAAO,CAAEkU,KAAkB5c,EAAU6c,qBAChCD,EAAclU,KAAK1I,EAEjC,CACA,UAAM8J,CAAKgT,EAAI1Q,EAAO4N,EAAiBvB,GACnC,IAAK,IAAIlC,EAAI,EAAGA,EAAIuG,EAAIvG,UACdtW,KAAK0b,YAAiB,OAALvP,QAAK,IAALA,OAAK,EAALA,EAAOvG,SAAUmU,EAAiBvB,EAEjE,CACA,YAAMsE,GACF9c,KAAKsG,cACCtG,KAAKyI,aACLzI,KAAK6E,KAAK,CAAElF,MAAO,EAAGb,OAAQ,GACxC,CACA4H,MAAAA,CAAOxG,EAAUsY,EAAOsC,GACpB9a,KAAK+c,SAAS/c,KAAKqa,OAAOW,QAAQ9a,QAAWf,EAAWqZ,EAAOsC,EACnE,CACAiC,QAAAA,CAASlC,GAA0D,IAAnDmC,EAAQxd,UAAAC,OAAA,QAAAN,IAAAK,UAAA,GAAAA,UAAA,GA/NoC,EA+NVgZ,EAAKhZ,UAAAC,OAAA,EAAAD,UAAA,QAAAL,EAAE2b,EAAQtb,UAAAC,OAAA,EAAAD,UAAA,QAAAL,EAE7D,GAAI0b,EADa,GACOA,EAAQ7a,KAAKuZ,MACjC,OAEJ,IAAI0D,EAAU,EACd,IAAK,IAAI3G,EAAIuE,EAAOoC,EAAUD,GAAY1G,EAAItW,KAAKuZ,MAAOjD,IAClDtW,KAAK4a,gBAAgBtE,IAAKkC,EAAOsC,IACjCmC,GAGZ,CACAtD,cAAAA,CAAeqD,EAAUxE,GAErBxY,KAAK+c,SADgB,EACOC,EAAUxE,EAC1C,CACA,gBAAMtN,GACF,MAAMrH,EAAU7D,KAAK6Z,WAAWxX,cAAega,EAASxY,EAAQQ,UAAUgY,OAC1E,IAAK,MAAM7D,KAAS6D,QACVrc,KAAKsY,cAAc+D,EAAO7D,GAF4D,EAEvCA,SAEnDxY,KAAKsY,cAAczU,EAAQQ,UAAWR,EAAQ4X,gBAAgBhc,OACxE,CACAyd,aAAAA,CAAcrX,GACV7F,KAAKmb,YAActV,EACnB7F,KAAKkb,WAAalb,KAAKkb,YAAclb,KAAKmb,YAActV,CAC5D,CACAiF,eAAAA,CAAgBhM,GACZkB,KAAKmd,cAAgBre,CACzB,CACA,YAAMmd,CAAOnV,GACT,MAAM/G,EAAYC,KAAK6Z,WAAYuD,EAAoB,IAAIC,IAC3Drd,KAAKsb,SAAW,IAAIpF,EAAS4B,EAAe/X,EAAUV,OAAO0F,MA/P/C,GAgQd,IAAK,MAAO,CAAE4X,KAAkB5c,EAAU6c,eACtCD,EAAcV,SAElB,IAAK,MAAO,CAAE1a,KAAWxB,EAAU4J,QAAS,KAAA2T,QACrB,QAAnBA,EAAM/b,EAAO0a,cAAM,IAAAqB,OAAA,EAAbA,EAAA/c,KAAAgB,EAAgBuF,GAC1B,CACA,MAAMyW,EAAevd,KAAKmd,cAC1B,IAAK,MAAMjd,KAAYF,KAAKqa,OAAQ,CAC5BkD,IAAiBrd,EAASsd,qBAC1Btd,EAAS0F,SAASgN,GAAK2K,EAAarX,MACpChG,EAAS0F,SAASkN,GAAKyK,EAAapX,OACpCjG,EAASud,gBAAgB7K,GAAK2K,EAAarX,MAC3ChG,EAASud,gBAAgB3K,GAAKyK,EAAapX,QAE/CjG,EAASsd,oBAAqB,EAC9Bxd,KAAKob,oBAAoBrF,MAAM7V,GAC/B,IAAK,MAAO,CAAEqB,KAAWvB,KAAK6Z,WAAWlQ,QAAS,KAAA+T,EAC9C,GAAIxd,EAAS+G,UACT,MAEiB,QAArByW,EAAAnc,EAAOoc,sBAAc,IAAAD,GAArBA,EAAAnd,KAAAgB,EAAwBrB,EAAU4G,EACtC,CACA,IAAK,MAAM8W,KAAS5d,KAAKub,OACjBqC,EAAMlI,UAAUxV,UACV0d,EAAMtZ,KAAKpE,EAAU4G,GAG/B5G,EAAS+G,UACTmW,EAAkB7R,IAAIrL,GAG1BF,KAAKsb,SAASxE,OAAO,IAAId,EAAM9V,EAASyb,cAAezb,GAC3D,CACA,GAAIkd,EAAkBrY,KAAM,CACxB,MAAM8Y,EAAepG,IAAO2F,EAAkBU,IAAIrG,GAClDzX,KAAKqa,OAASra,KAAKwZ,OAAOqE,GAC1B7d,KAAKsa,QAAUta,KAAKsa,QAAQd,OAAOqE,GACnC,IAAK,MAAM3d,KAAYkd,EACnBpd,KAAKoV,QAAQmF,cAAc,kBAAmB,CAC1Cxa,UAAWC,KAAK6Z,WAChBW,KAAM,CACFta,cAIZF,KAAKkY,cAAckF,EACvB,OACMpd,KAAKob,oBAAoB5F,iBAAiB1O,GAChD,IAAK,MAAM5G,KAAYF,KAAKqa,OAAQ,CAChC,IAAK,MAAMla,KAAWH,KAAK8J,eACjB3J,EAAQ8b,OAAO/b,EAAU4G,GAE9B5G,EAAS+G,WAAc/G,EAAS8G,gBAC3BhH,KAAKob,oBAAoBtF,kBAAkB5V,EAAU4G,EAEnE,CAEA,UADO9G,KAAKmd,cACRnd,KAAKkb,WAAY,CACjB,MAAM6C,EAAS/d,KAAKsa,QACpByD,EAAOC,MAAK,CAACrb,EAAGsb,IAAMA,EAAErY,SAASsY,EAAIvb,EAAEiD,SAASsY,GAAKvb,EAAEwb,GAAKF,EAAEE,KAC9D,MAAMrK,EAAe,EACrB9T,KAAKmb,YAAc4C,EAAOA,EAAOte,OAASqU,GAAclO,SAASsY,EACjEle,KAAKkb,YAAa,CACtB,CACJ,ECnUG,MAAMkD,EACTte,WAAAA,CAAYC,GACRC,KAAKD,UAAYA,EACjBC,KAAK0K,WAJQ,EAKb1K,KAAKqe,aALiC,CAM1C,CACA5V,IAAAA,GACI,MAAM1I,EAAYC,KAAKD,UAAW8D,EAAU9D,EAAUsC,cACtDrC,KAAK0K,YAAc7G,EAAQya,eAAgBC,EAAAA,EAAAA,MAT9B,EASuD/N,OAAOgO,iBAC3Exe,KAAKqe,aAViC,EAWtC,MAAMI,EAAQze,KAAK0K,WAAYrL,EAASU,EAAUV,OAClD,GAAIA,EAAOuE,QAAS,CAChB,MAAMA,EAAUvE,EAAOuE,QACvBvE,EAAO0F,KAAKmB,MAAQtC,EAAQ0G,YAAcmU,EAC1Cpf,EAAO0F,KAAKoB,OAASvC,EAAQyG,aAAeoU,CAChD,CACA,MAAMpa,EAAYR,EAAQQ,UAAWqa,EAAcra,EAAUC,KAC7DtE,KAAK2e,UAAWC,EAAAA,EAAAA,IAAcF,EAAYG,QAAQF,UAAYF,EAC9Dze,KAAK8e,oBAAqBF,EAAAA,EAAAA,IAAcva,EAAUU,KAAKga,UAAUC,OAASP,CAC9E,CACAQ,YAAAA,CAAa/e,GACT,MAAM2D,EAAU3D,EAAS2D,QAAS4a,EAAQze,KAAK0K,WAAYgU,EAAc7a,EAAQS,KAAM4a,EAAeR,EAAYS,SAAUC,EAAQlf,EAASsK,OAC7I4U,EAAMC,WAAYT,EAAAA,EAAAA,IAAcF,EAAYY,OAASb,EACrDW,EAAMG,WAAYX,EAAAA,EAAAA,IAAcF,EAAYM,OAASP,EACrDW,EAAMN,oBAAqBF,EAAAA,EAAAA,IAAc/a,EAAQkB,KAAKga,UAAUC,OAASP,EACzE,MAAMe,EAAcJ,EAAMI,YAC1BA,EAAYC,gBAAyCtgB,IAA5B+f,EAAaO,WAA2BP,EAAaO,WAAahB,OAAQtf,EACnGqgB,EAAYE,cAAqCvgB,IAA1B+f,EAAaQ,SAAyBR,EAAaQ,SAAWjB,OAAQtf,EAC7FigB,EAAMT,UAAWC,EAAAA,EAAAA,IAAcF,EAAYG,QAAQF,UAAYF,CACnE,E,aCvBJ,SAASkB,EAAW5f,GAChB,OAAOA,IAAcA,EAAUkH,SACnC,CAQA,SAAS2Y,EAAqBzK,EAAQpV,GAClC,MAAM8D,EAAU,IAAIgc,EAAAA,EAAQ1K,EAAQpV,GAAW,QAAAoY,EAAA3Y,UAAAC,OADCqgB,EAAgB,IAAA3L,MAAAgE,EAAA,EAAAA,EAAA,KAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAhB0H,EAAgB1H,EAAA,GAAA5Y,UAAA4Y,GAGhE,OADA2H,EAAAA,EAAAA,GAAYlc,KAAYic,GACjBjc,CACX,CACO,MAAMmc,EACTlgB,WAAAA,CAAYqV,EAAQgJ,EAAI8B,GACpBjgB,KAAKkgB,qBAAwBvO,IACzB,GAAKgO,EAAW3f,OAAUA,KAAKqC,cAAc8d,uBAG7C,IAAK,MAAMC,KAASzO,EACZyO,EAAMxO,SAAW5R,KAAKkM,cAActI,UAGpCwc,EAAMC,eACNrgB,KAAKoO,OAGLpO,KAAKkO,QAEb,EAEJlO,KAAKsgB,WAAane,UACd,IAAI,IAAAoe,EACA,IAAKvgB,KAAKwgB,cACkBrhB,IAAxBa,KAAKygB,gBACLC,EAAY1gB,KAAKygB,eAAiB/R,EAAAA,GAAwB1O,KAAK2gB,SAE/D,YADA3gB,KAAK6E,MAAK,GAGK,QAAnB0b,EAAAvgB,KAAKygB,sBAAc,IAAAF,IAAnBvgB,KAAKygB,eAAmBC,GACxB,MAAM5Z,EAtCtB,SAAmBnH,GACf,MAAO,CACHA,QACAb,OAH+CU,UAAAC,OAAA,QAAAN,IAAAK,UAAA,IAAAA,UAAA,GADpC,IACeA,UAAAC,OAAA,QAAAN,IAAAK,UAAA,GAAAA,UAAA,GADf,OAI4CG,EAAS+O,EAAAA,GAExE,CAiC8BkS,CAAUF,EAAY1gB,KAAKygB,eAAgBzgB,KAAK2gB,SAAU3gB,KAAKwgB,SAG7E,GAFAxgB,KAAK6gB,YAAY/Z,EAAMnH,OACvBK,KAAKygB,eAAiBC,EAClB5Z,EAAMnH,MAAQ+O,EAAAA,GAEd,YADA1O,KAAK6E,MAAK,GAId,SADM7E,KAAKqE,UAAUQ,KAAKiC,IACrB9G,KAAK8gB,QAEN,YADA9gB,KAAKwG,UAGLxG,KAAKmO,iBACLnO,KAAK6E,MAAK,EAElB,CACA,MAAOmE,IACHC,EAAAA,EAAAA,MAAYxF,MAAM,GAADiX,OAAIC,EAAAA,GAAW,sBAAsB3R,EAC1D,GAEJhJ,KAAKoV,QAAUD,EACfnV,KAAKme,GAAK4C,OAAO5C,GACjBne,KAAK2gB,SAAW,IAChB3gB,KAAKwgB,SAAU,EACfxgB,KAAKghB,OAAS,EACdhhB,KAAKihB,UAAY,EACjBjhB,KAAKkhB,UAAY,EACjBlhB,KAAKmhB,aAAc,EACnBnhB,KAAK6K,SAAU,EACf7K,KAAKiH,WAAY,EACjBjH,KAAKohB,SAAU,EACfphB,KAAKygB,eAAiB,EACtBzgB,KAAKqhB,QAAU,IACfrhB,KAAKiO,YAAa,EAClBjO,KAAKshB,eAAiBrB,EACtBjgB,KAAKuhB,sBAAwBtB,EAC7BjgB,KAAKwK,OAAS,IAAI4T,EAAOpe,MACzBA,KAAKX,OAAS,IAAIQ,EAAOG,MACzBA,KAAKqE,UAAY,IAAI2T,EAAUhY,KAAKoV,QAASpV,MAC7CA,KAAK4c,eAAiB,IAAI7H,IAC1B/U,KAAKkM,cAAgB,CACjBC,MAAO,CACH2F,UAAU,EACVG,QAAQ,IAGhBjS,KAAK2J,QAAU,IAAIoL,IACnB/U,KAAKwhB,cAAgB,IAAIzM,IACzB/U,KAAKyhB,aAAe,IAAI1M,IACxB/U,KAAK0hB,SAAW9B,EAAqB5f,KAAKoV,QAASpV,MACnDA,KAAKqC,cAAgBud,EAAqB5f,KAAKoV,QAASpV,MACxDA,KAAK2hB,gBAAkB,IAAI7V,EAAe9L,MAC1CA,KAAK4hB,uBAAwBC,EAAAA,EAAAA,KAA0BlQ,GAAY3R,KAAKkgB,qBAAqBvO,KAC7F3R,KAAKoV,QAAQmF,cAAc,iBAAkB,CAAExa,UAAWC,MAC9D,CACA,mBAAImO,GACA,OAAQnO,KAAKohB,UAAYphB,KAAKiO,YAAc0R,EAAW3f,KAC3D,CACA,WAAI6D,GACA,OAAO7D,KAAK0hB,QAChB,CACA,iBAAIzB,GACA,OAAOjgB,KAAKshB,cAChB,CACAQ,eAAAA,CAAgBpc,GACZ,IAAKia,EAAW3f,MACZ,OAEJ,MAAM+hB,EAAK/hB,KAAKkM,cAActI,QAC9B,IAAKme,EACD,OAEJ,MAAMC,EAAsBA,CAAChZ,EAAGuJ,EAAK7R,KACjC,IAAKif,EAAW3f,MACZ,OAEJ,MAAMyK,EAAUzK,KAAKwK,OAAOE,WAAYuX,EAAY,CAChDrP,EAAGL,EAAIK,EAAInI,EACXqI,EAAGP,EAAIO,EAAIrI,GACZpG,EAAYrE,KAAKqE,UAAUiX,SAAS3D,YAAYsK,EAAWvhB,EAAS+J,GACvE/E,EAASsD,EAAG3E,EAAU,EAuD1B,IAAI6d,GAAU,EAAOC,GAAa,EAClCJ,EAAGze,iBAAiB,SAtDE0F,IAClB,IAAK2W,EAAW3f,MACZ,OAEJ,MAAMyS,EAAazJ,EAAGuJ,EAAM,CACxBK,EAAGH,EAAWY,SAAWZ,EAAWI,QACpCC,EAAGL,EAAWa,SAAWb,EAAWM,SAExCiP,EAAoBhZ,EAAGuJ,EADX,EACuB,IA+CvCwP,EAAGze,iBAAiB,cA7CM8e,KACjBzC,EAAW3f,QAGhBkiB,GAAU,EACVC,GAAa,EAAK,IAyCtBJ,EAAGze,iBAAiB,aAvCK+e,KAChB1C,EAAW3f,QAGhBmiB,GAAa,EAAI,IAoCrBJ,EAAGze,iBAAiB,YAlCK0F,IACrB,GAAK2W,EAAW3f,MAAhB,CAGA,GAAIkiB,IAAYC,EAAY,CACxB,MAAMtO,EAAa7K,EACb8K,EAAe,EACrB,IAAIC,EAAYF,EAAWG,QAAQH,EAAWG,QAAQvU,OAASqU,GAC/D,IAAKC,IACDA,EAAYF,EAAWQ,eAAeR,EAAWQ,eAAe5U,OAASqU,IACpEC,GACD,OAGR,MAAMnQ,EAAU5D,KAAKX,OAAOuE,QAASwP,EAAaxP,EAAUA,EAAQ+O,6BAA0BxT,EAAWmjB,EAAgB,EAAG/P,EAAM,CAC9HK,EAAGmB,EAAUlB,SAAWO,EAAaA,EAAWnN,KAAOqc,GACvDxP,EAAGiB,EAAUhB,SAAWK,EAAaA,EAAWpN,IAAMsc,IAE1DN,EAAoBhZ,EAAGuJ,EAAKmE,KAAK6L,IAAIxO,EAAUyO,QAASzO,EAAU0O,SACtE,CACAP,GAAU,EACVC,GAAa,CAlBb,CAkBkB,IActBJ,EAAGze,iBAAiB,eAZOof,KAClB/C,EAAW3f,QAGhBkiB,GAAU,EACVC,GAAa,EAAK,GAQ1B,CACAtB,WAAAA,CAAYlhB,GACRK,KAAKkhB,WAAavhB,CACtB,CACAgjB,OAAAA,CAAQ3jB,EAAK4jB,GAA6B,IAAlB9H,EAAQtb,UAAAC,OAAA,QAAAN,IAAAK,UAAA,IAAAA,UAAA,GAC5B,SAAKmgB,EAAW3f,QAAW8a,GAAY9a,KAAK4c,eAAekB,IAAI9e,MAG/DgB,KAAK4c,eAAehI,IAAI5V,EAAK4jB,IACtB,EACX,CACA9B,KAAAA,GACI,OAAQ9gB,KAAKihB,WAAajhB,KAAKkhB,WAAalhB,KAAKihB,SACrD,CACAza,OAAAA,GACI,IAAKmZ,EAAW3f,MACZ,OAEJA,KAAKyG,OACLzG,KAAKqE,UAAUmC,UACfxG,KAAKX,OAAOmH,UACZ,IAAK,MAAO,CAAEqc,KAAiB7iB,KAAKwhB,cAAe,KAAAsB,EAC3B,QAApBA,EAAAD,EAAarc,eAAO,IAAAsc,GAApBA,EAAAviB,KAAAsiB,EAAuB7iB,KAC3B,CACA,IAAK,MAAO,CAAE+iB,KAAgB/iB,KAAKyhB,aAAc,KAAAuB,EAC1B,QAAnBA,EAAAD,EAAYvc,eAAO,IAAAwc,GAAnBA,EAAAziB,KAAAwiB,EAAsB/iB,KAC1B,CACA,IAAK,MAAMhB,KAAOgB,KAAKwhB,cAAcyB,OACjCjjB,KAAKwhB,cAAchN,OAAOxV,GAE9B,IAAK,MAAMA,KAAOgB,KAAKyhB,aAAawB,OAChCjjB,KAAKyhB,aAAajN,OAAOxV,GAE7BgB,KAAKoV,QAAQ8N,aAAaljB,MAC1BA,KAAKiH,WAAY,EACjB,MAAMkc,EAAUnjB,KAAKoV,QAAQgO,MAAOC,EAAMF,EAAQG,WAAW7J,GAAMA,IAAMzZ,OACzE,GAAIqjB,GADuF,EACtE,CACjB,MAAME,EAAc,EACpBJ,EAAQlI,OAAOoI,EAAKE,EACxB,CACAvjB,KAAKoV,QAAQmF,cAAc,qBAAsB,CAAExa,UAAWC,MAClE,CACA6E,IAAAA,CAAK2e,GACD,IAAK7D,EAAW3f,MACZ,OAEJ,IAAIyjB,EAAcD,EAClB,MAAME,EAAQvhB,UACNshB,IACAzjB,KAAKygB,oBAAiBthB,EACtBskB,GAAc,SAEZzjB,KAAKsgB,WAAWI,EAAU,EAEpC1gB,KAAK2jB,oBAAsBC,uBAAuBlD,IAAmBgD,EAAMhD,EAAU,GACzF,CACA,YAAMmD,CAAO/a,GAAoB,IAAdjF,EAAOrE,UAAAC,OAAA,QAAAN,IAAAK,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC1B,IAAK,MAAO,CAAE+B,KAAWvB,KAAK2J,QAAS,CACnC,IAAKpI,EAAOsiB,OACR,SAEJ,MAAMtM,QAAYhW,EAAOsiB,OAAO/a,EAAMjF,GACtC,GAAK0T,EAAIuM,UAGT,OAAOvM,EAAIwM,IACf,EACA9a,EAAAA,EAAAA,MAAYxF,MAAM,GAADiX,OAAIC,EAAAA,GAAW,+BAAAD,OAA8B5R,EAAI,cACtE,CACA+D,eAAAA,CAAgBD,GACZ,GAAK+S,EAAW3f,MAAhB,CAGAA,KAAKqE,UAAUwI,gBAAgBD,GAC/B,IAAK,MAAO,CAAErL,KAAWvB,KAAK2J,QAAS,KAAAqa,EACb,QAAtBA,EAAAziB,EAAOsL,uBAAe,IAAAmX,GAAtBA,EAAAzjB,KAAAgB,EAAyBqL,EAC7B,CAJA,CAKJ,CACA,UAAMnE,GACF,IAAKkX,EAAW3f,MACZ,OAEJ,MAAMikB,EAAUjkB,KAAKoV,QAAQ8O,sBAC7B,IAAK,MAAMpb,KAAQmb,EAAS,CACxB,MAAME,EAASnkB,KAAKoV,QAAQgP,gBAAgBtb,GACxCqb,GACAnkB,KAAKwhB,cAAc5M,IAAI9L,EAAMqb,EAErC,CACA,MAAME,EAASrkB,KAAKoV,QAAQkP,qBAC5B,IAAK,MAAMxb,KAAQub,EAAQ,CACvB,MAAMF,EAASnkB,KAAKoV,QAAQmP,eAAezb,GACvCqb,GACAnkB,KAAKyhB,aAAa7M,IAAI9L,EAAMqb,EAEpC,OACMnkB,KAAKqE,UAAU8E,cACrBnJ,KAAK0hB,SAAW9B,EAAqB5f,KAAKoV,QAASpV,KAAMA,KAAKuhB,sBAAuBvhB,KAAKigB,eAC1FjgB,KAAKqC,cAAgBud,EAAqB5f,KAAKoV,QAASpV,KAAMA,KAAK0hB,UACnE,MAAM8C,QAAyBxkB,KAAKoV,QAAQqP,oBAAoBzkB,MAChE,IAAK,MAAOme,EAAI5c,KAAWijB,EACvBxkB,KAAK2J,QAAQiL,IAAIuJ,EAAI5c,GAEzBvB,KAAKwK,OAAO/B,aACNzI,KAAKX,OAAOoJ,OAClBzI,KAAKiL,sBACLjL,KAAKX,OAAOiG,iBACZtF,KAAKX,OAAOqC,SACZ1B,KAAKqhB,QAAUrhB,KAAKqC,cAAcgf,QAClCrhB,KAAKihB,WAAYrC,EAAAA,EAAAA,IAAc5e,KAAKqC,cAAcqiB,UAAYhW,EAAAA,GAC9D1O,KAAKghB,QAASpC,EAAAA,EAAAA,IAAc5e,KAAKqC,cAAcoM,OAASC,EAAAA,GACxD1O,KAAKkhB,UAAY,EAEjBlhB,KAAK2gB,SAAW3gB,KAAKqC,cAAcse,SADQ,EACiB3gB,KAAKqC,cAAcse,SADvD,IAExB3gB,KAAKwgB,QAAUxgB,KAAKqC,cAAcsiB,OAClC,IAAK,MAAO,CAAER,KAAWnkB,KAAKwhB,cAAe,KAAAoD,QACxB,QAAjBA,EAAMT,EAAO1b,YAAI,IAAAmc,OAAA,EAAXA,EAAArkB,KAAA4jB,EAAcnkB,MACxB,CACA,IAAK,MAAO,CAAEmkB,KAAWnkB,KAAKyhB,aAAc,KAAAoD,QACvB,QAAjBA,EAAMV,EAAO1b,YAAI,IAAAoc,OAAA,EAAXA,EAAAtkB,KAAA4jB,EAAcnkB,MACxB,CACA,IAAK,MAAO,CAAEuB,KAAWvB,KAAK2J,QAAS,KAAAmb,QAClB,QAAjBA,EAAMvjB,EAAOkH,YAAI,IAAAqc,OAAA,EAAXA,EAAAvkB,KAAAgB,GACV,CACAvB,KAAKoV,QAAQmF,cAAc,gBAAiB,CAAExa,UAAWC,aACnDA,KAAKqE,UAAUoE,aACfzI,KAAKqE,UAAU6G,aACrB,IAAK,MAAO,CAAE3J,KAAWvB,KAAK2J,QAAS,KAAAob,EACd,QAArBA,EAAAxjB,EAAOyjB,sBAAc,IAAAD,GAArBA,EAAAxkB,KAAAgB,EACJ,CACAvB,KAAKoV,QAAQmF,cAAc,iBAAkB,CAAExa,UAAWC,MAC9D,CACA,eAAM6N,CAAUH,GACPiS,EAAW3f,QAGhBA,KAAKilB,cAAgBvX,QACf1N,KAAKmL,UACf,CACA+C,KAAAA,GACI,GAAKyR,EAAW3f,aAGiBb,IAA7Ba,KAAK2jB,sBACLuB,qBAAqBllB,KAAK2jB,4BACnB3jB,KAAK2jB,sBAEZ3jB,KAAKohB,SAAT,CAGA,IAAK,MAAO,CAAE7f,KAAWvB,KAAK2J,QAAS,KAAAwb,EACvB,QAAZA,EAAA5jB,EAAO2M,aAAK,IAAAiX,GAAZA,EAAA5kB,KAAAgB,EACJ,CACKvB,KAAKiO,aACNjO,KAAKohB,SAAU,GAEnBphB,KAAKoV,QAAQmF,cAAc,kBAAmB,CAAExa,UAAWC,MAP3D,CAQJ,CACAoO,IAAAA,CAAKoV,GACD,IAAK7D,EAAW3f,MACZ,OAEJ,MAAMolB,EAAcplB,KAAKohB,SAAWoC,EACpC,IAAIxjB,KAAKmhB,aAAgBnhB,KAAKqC,cAAcgjB,SAA5C,CAOA,GAHIrlB,KAAKohB,UACLphB,KAAKohB,SAAU,GAEfgE,EACA,IAAK,MAAO,CAAE7jB,KAAWvB,KAAK2J,QACtBpI,EAAO6M,MACP7M,EAAO6M,OAInBpO,KAAKoV,QAAQmF,cAAc,gBAAiB,CAAExa,UAAWC,OACzDA,KAAK6E,KAAgB,OAAXugB,QAAW,IAAXA,GAAAA,EAZV,MAFIplB,KAAKmhB,aAAc,CAe3B,CACA,aAAMhW,GACF,GAAKwU,EAAW3f,MAIhB,OADAA,KAAKyG,OACEzG,KAAKslB,OAChB,CACA,WAAMvP,GACF,GAAK4J,EAAW3f,MAMhB,OAHAA,KAAKuhB,2BAAwBpiB,EAC7Ba,KAAK0hB,SAAW9B,EAAqB5f,KAAKoV,QAASpV,MACnDA,KAAKqC,cAAgBud,EAAqB5f,KAAKoV,QAASpV,KAAMA,KAAK0hB,UAC5D1hB,KAAKmL,SAChB,CACA,WAAMma,GACG3F,EAAW3f,QAASA,KAAK6K,gBAGxB7K,KAAKyI,OACXzI,KAAK6K,SAAU,QACT,IAAI9H,SAASC,IACf,MAAMsiB,EAAQnjB,UACVnC,KAAK2hB,gBAAgB3M,eACjBhV,KAAKkM,cAActI,mBAAmB2hB,aAAevlB,KAAK4hB,uBAC1D5hB,KAAK4hB,sBAAsBrc,QAAQvF,KAAKkM,cAActI,SAE1D,IAAK,MAAO,CAAErC,KAAWvB,KAAK2J,QAAS,KAAA6b,QACjB,QAAlBA,EAAMjkB,EAAO+jB,aAAK,IAAAE,OAAA,EAAZA,EAAAjlB,KAAAgB,GACV,CACAvB,KAAKoV,QAAQmF,cAAc,mBAAoB,CAAExa,UAAWC,OAC5DA,KAAKoO,OACLpL,GAAS,EAEbhD,KAAKylB,cAAgB3Y,YAAW,KAAWwY,GAAO,GAAEtlB,KAAKghB,OAAO,IAExE,CACAva,IAAAA,GACI,GAAKkZ,EAAW3f,OAAUA,KAAK6K,QAA/B,CAGI7K,KAAKylB,gBACLlX,aAAavO,KAAKylB,sBACXzlB,KAAKylB,eAEhBzlB,KAAKmhB,aAAc,EACnBnhB,KAAK6K,SAAU,EACf7K,KAAK2hB,gBAAgB1M,kBACrBjV,KAAKkO,QACLlO,KAAKqE,UAAUiC,QACftG,KAAKX,OAAOoH,OACRzG,KAAKkM,cAActI,mBAAmB2hB,aAAevlB,KAAK4hB,uBAC1D5hB,KAAK4hB,sBAAsBlQ,UAAU1R,KAAKkM,cAActI,SAE5D,IAAK,MAAO,CAAErC,KAAWvB,KAAK2J,QAAS,KAAA+b,EACxB,QAAXA,EAAAnkB,EAAOkF,YAAI,IAAAif,GAAXA,EAAAnlB,KAAAgB,EACJ,CACA,IAAK,MAAMvC,KAAOgB,KAAK2J,QAAQsZ,OAC3BjjB,KAAK2J,QAAQ6K,OAAOxV,GAExBgB,KAAKshB,eAAiBthB,KAAK0hB,SAC3B1hB,KAAKoV,QAAQmF,cAAc,mBAAoB,CAAExa,UAAWC,MArB5D,CAsBJ,CACAiL,mBAAAA,GACIjL,KAAKqC,cAAcsjB,WAAa,GAChC,MAAMC,EAAc5lB,KAAKqC,cAAcwjB,cAAc7lB,KAAKX,OAAO0F,KAAKmB,MAAOlG,KAAKwK,OAAOE,WAAY1K,KAAK0hB,UAE1G,OADA1hB,KAAKqC,cAAcyjB,SAAS9lB,KAAKilB,eAC7BjlB,KAAK+lB,sBAAwBH,IAGjC5lB,KAAK+lB,oBAAsBH,GACpB,EACX,E","sources":["../node_modules/@tsparticles/engine/browser/Core/Canvas.js","../node_modules/@tsparticles/engine/browser/Core/Utils/EventListeners.js","../node_modules/@tsparticles/engine/browser/Core/Utils/InteractionManager.js","../node_modules/@tsparticles/engine/browser/Core/Utils/Point.js","../node_modules/@tsparticles/engine/browser/Core/Utils/QuadTree.js","../node_modules/@tsparticles/engine/browser/Core/Particles.js","../node_modules/@tsparticles/engine/browser/Core/Retina.js","../node_modules/@tsparticles/engine/browser/Core/Container.js"],"sourcesContent":["import { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase, paintImage } from \"../Utils/CanvasUtils.js\";\nimport { deepExtend, getLogger, safeMutationObserver } from \"../Utils/Utils.js\";\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeColorToRgb } from \"../Utils/ColorUtils.js\";\nimport { generatedAttribute } from \"./Utils/Constants.js\";\nfunction setTransformValue(factor, newFactor, key) {\n    const newValue = newFactor[key], defaultValue = 1;\n    if (newValue !== undefined) {\n        factor[key] = (factor[key] ?? defaultValue) * newValue;\n    }\n}\nfunction setStyle(canvas, style, important = false) {\n    if (!style) {\n        return;\n    }\n    const element = canvas;\n    if (!element) {\n        return;\n    }\n    const elementStyle = element.style;\n    if (!elementStyle) {\n        return;\n    }\n    for (const key in style) {\n        const value = style[key];\n        if (!value) {\n            continue;\n        }\n        elementStyle.setProperty(key, value, important ? \"important\" : \"\");\n    }\n}\nexport class Canvas {\n    constructor(container) {\n        this.container = container;\n        this._applyPostDrawUpdaters = (particle) => {\n            for (const updater of this._postDrawUpdaters) {\n                updater.afterDraw?.(particle);\n            }\n        };\n        this._applyPreDrawUpdaters = (ctx, particle, radius, zOpacity, colorStyles, transform) => {\n            for (const updater of this._preDrawUpdaters) {\n                if (updater.getColorStyles) {\n                    const { fill, stroke } = updater.getColorStyles(particle, ctx, radius, zOpacity);\n                    if (fill) {\n                        colorStyles.fill = fill;\n                    }\n                    if (stroke) {\n                        colorStyles.stroke = stroke;\n                    }\n                }\n                if (updater.getTransformValues) {\n                    const updaterTransform = updater.getTransformValues(particle);\n                    for (const key in updaterTransform) {\n                        setTransformValue(transform, updaterTransform, key);\n                    }\n                }\n                updater.beforeDraw?.(particle);\n            }\n        };\n        this._applyResizePlugins = () => {\n            for (const plugin of this._resizePlugins) {\n                plugin.resize?.();\n            }\n        };\n        this._getPluginParticleColors = (particle) => {\n            let fColor, sColor;\n            for (const plugin of this._colorPlugins) {\n                if (!fColor && plugin.particleFillColor) {\n                    fColor = rangeColorToHsl(plugin.particleFillColor(particle));\n                }\n                if (!sColor && plugin.particleStrokeColor) {\n                    sColor = rangeColorToHsl(plugin.particleStrokeColor(particle));\n                }\n                if (fColor && sColor) {\n                    break;\n                }\n            }\n            return [fColor, sColor];\n        };\n        this._initCover = async () => {\n            const options = this.container.actualOptions, cover = options.backgroundMask.cover, color = cover.color;\n            if (color) {\n                const coverRgb = rangeColorToRgb(color);\n                if (coverRgb) {\n                    const coverColor = {\n                        ...coverRgb,\n                        a: cover.opacity,\n                    };\n                    this._coverColorStyle = getStyleFromRgb(coverColor, coverColor.a);\n                }\n            }\n            else {\n                await new Promise((resolve, reject) => {\n                    if (!cover.image) {\n                        return;\n                    }\n                    const img = document.createElement(\"img\");\n                    img.addEventListener(\"load\", () => {\n                        this._coverImage = {\n                            image: img,\n                            opacity: cover.opacity,\n                        };\n                        resolve();\n                    });\n                    img.addEventListener(\"error\", (evt) => {\n                        reject(evt.error);\n                    });\n                    img.src = cover.image;\n                });\n            }\n        };\n        this._initStyle = () => {\n            const element = this.element, options = this.container.actualOptions;\n            if (!element) {\n                return;\n            }\n            if (this._fullScreen) {\n                this._originalStyle = deepExtend({}, element.style);\n                this._setFullScreenStyle();\n            }\n            else {\n                this._resetOriginalStyle();\n            }\n            for (const key in options.style) {\n                if (!key || !options.style) {\n                    continue;\n                }\n                const value = options.style[key];\n                if (!value) {\n                    continue;\n                }\n                element.style.setProperty(key, value, \"important\");\n            }\n        };\n        this._initTrail = async () => {\n            const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = trail.fill;\n            if (!trail.enable) {\n                return;\n            }\n            const factorNumerator = 1, opacity = factorNumerator / trail.length;\n            if (trailFill.color) {\n                const fillColor = rangeColorToRgb(trailFill.color);\n                if (!fillColor) {\n                    return;\n                }\n                this._trailFill = {\n                    color: {\n                        ...fillColor,\n                    },\n                    opacity,\n                };\n            }\n            else {\n                await new Promise((resolve, reject) => {\n                    if (!trailFill.image) {\n                        return;\n                    }\n                    const img = document.createElement(\"img\");\n                    img.addEventListener(\"load\", () => {\n                        this._trailFill = {\n                            image: img,\n                            opacity,\n                        };\n                        resolve();\n                    });\n                    img.addEventListener(\"error\", (evt) => {\n                        reject(evt.error);\n                    });\n                    img.src = trailFill.image;\n                });\n            }\n        };\n        this._paintBase = (baseColor) => {\n            this.draw((ctx) => paintBase(ctx, this.size, baseColor));\n        };\n        this._paintImage = (image, opacity) => {\n            this.draw((ctx) => paintImage(ctx, this.size, image, opacity));\n        };\n        this._repairStyle = () => {\n            const element = this.element;\n            if (!element) {\n                return;\n            }\n            this._safeMutationObserver((observer) => observer.disconnect());\n            this._initStyle();\n            this.initBackground();\n            this._safeMutationObserver((observer) => observer.observe(element, { attributes: true }));\n        };\n        this._resetOriginalStyle = () => {\n            const element = this.element, originalStyle = this._originalStyle;\n            if (!(element && originalStyle)) {\n                return;\n            }\n            setStyle(element, originalStyle);\n        };\n        this._safeMutationObserver = (callback) => {\n            if (!this._mutationObserver) {\n                return;\n            }\n            callback(this._mutationObserver);\n        };\n        this._setFullScreenStyle = () => {\n            const element = this.element;\n            if (!element) {\n                return;\n            }\n            const radix = 10;\n            setStyle(element, {\n                position: \"fixed\",\n                zIndex: this.container.actualOptions.fullScreen.zIndex.toString(radix),\n                top: \"0\",\n                left: \"0\",\n                width: \"100%\",\n                height: \"100%\",\n            }, true);\n        };\n        this.size = {\n            height: 0,\n            width: 0,\n        };\n        this._context = null;\n        this._generated = false;\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    get _fullScreen() {\n        return this.container.actualOptions.fullScreen.enable;\n    }\n    clear() {\n        const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = this._trailFill, minimumLength = 0;\n        if (options.backgroundMask.enable) {\n            this.paint();\n        }\n        else if (trail.enable && trail.length > minimumLength && trailFill) {\n            if (trailFill.color) {\n                this._paintBase(getStyleFromRgb(trailFill.color, trailFill.opacity));\n            }\n            else if (trailFill.image) {\n                this._paintImage(trailFill.image, trailFill.opacity);\n            }\n        }\n        else if (options.clear) {\n            this.draw((ctx) => {\n                clear(ctx, this.size);\n            });\n        }\n    }\n    destroy() {\n        this.stop();\n        if (this._generated) {\n            const element = this.element;\n            element?.remove();\n        }\n        else {\n            this._resetOriginalStyle();\n        }\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    draw(cb) {\n        const ctx = this._context;\n        if (!ctx) {\n            return;\n        }\n        return cb(ctx);\n    }\n    drawAsync(cb) {\n        const ctx = this._context;\n        if (!ctx) {\n            return Promise.resolve(undefined);\n        }\n        return cb(ctx);\n    }\n    async drawParticle(particle, delta) {\n        if (particle.spawning || particle.destroyed) {\n            return;\n        }\n        const radius = particle.getRadius(), minimumSize = 0;\n        if (radius <= minimumSize) {\n            return;\n        }\n        const pfColor = particle.getFillColor(), psColor = particle.getStrokeColor() ?? pfColor;\n        let [fColor, sColor] = this._getPluginParticleColors(particle);\n        if (!fColor) {\n            fColor = pfColor;\n        }\n        if (!sColor) {\n            sColor = psColor;\n        }\n        if (!fColor && !sColor) {\n            return;\n        }\n        await this.drawAsync(async (ctx) => {\n            const container = this.container, options = container.actualOptions, zIndexOptions = particle.options.zIndex, zIndexFactorOffset = 1, zIndexFactor = zIndexFactorOffset - particle.zIndexFactor, zOpacityFactor = zIndexFactor ** zIndexOptions.opacityRate, defaultOpacity = 1, opacity = particle.bubble.opacity ?? particle.opacity?.value ?? defaultOpacity, strokeOpacity = particle.strokeOpacity ?? opacity, zOpacity = opacity * zOpacityFactor, zStrokeOpacity = strokeOpacity * zOpacityFactor, transform = {}, colorStyles = {\n                fill: fColor ? getStyleFromHsl(fColor, zOpacity) : undefined,\n            };\n            colorStyles.stroke = sColor ? getStyleFromHsl(sColor, zStrokeOpacity) : colorStyles.fill;\n            this._applyPreDrawUpdaters(ctx, particle, radius, zOpacity, colorStyles, transform);\n            await drawParticle({\n                container,\n                context: ctx,\n                particle,\n                delta,\n                colorStyles,\n                backgroundMask: options.backgroundMask.enable,\n                composite: options.backgroundMask.composite,\n                radius: radius * zIndexFactor ** zIndexOptions.sizeRate,\n                opacity: zOpacity,\n                shadow: particle.options.shadow,\n                transform,\n            });\n            this._applyPostDrawUpdaters(particle);\n        });\n    }\n    async drawParticlePlugin(plugin, particle, delta) {\n        await this.drawAsync((ctx) => drawParticlePlugin(ctx, plugin, particle, delta));\n    }\n    async drawPlugin(plugin, delta) {\n        await this.drawAsync((ctx) => drawPlugin(ctx, plugin, delta));\n    }\n    async init() {\n        this._safeMutationObserver((obs) => obs.disconnect());\n        this._mutationObserver = safeMutationObserver((records) => {\n            for (const record of records) {\n                if (record.type === \"attributes\" && record.attributeName === \"style\") {\n                    this._repairStyle();\n                }\n            }\n        });\n        this.resize();\n        this._initStyle();\n        await this._initCover();\n        try {\n            await this._initTrail();\n        }\n        catch (e) {\n            getLogger().error(e);\n        }\n        this.initBackground();\n        this._safeMutationObserver((obs) => {\n            if (!this.element) {\n                return;\n            }\n            obs.observe(this.element, { attributes: true });\n        });\n        this.initUpdaters();\n        this.initPlugins();\n        this.paint();\n    }\n    initBackground() {\n        const options = this.container.actualOptions, background = options.background, element = this.element;\n        if (!element) {\n            return;\n        }\n        const elementStyle = element.style;\n        if (!elementStyle) {\n            return;\n        }\n        if (background.color) {\n            const color = rangeColorToRgb(background.color);\n            elementStyle.backgroundColor = color ? getStyleFromRgb(color, background.opacity) : \"\";\n        }\n        else {\n            elementStyle.backgroundColor = \"\";\n        }\n        elementStyle.backgroundImage = background.image || \"\";\n        elementStyle.backgroundPosition = background.position || \"\";\n        elementStyle.backgroundRepeat = background.repeat || \"\";\n        elementStyle.backgroundSize = background.size || \"\";\n    }\n    initPlugins() {\n        this._resizePlugins = [];\n        for (const [, plugin] of this.container.plugins) {\n            if (plugin.resize) {\n                this._resizePlugins.push(plugin);\n            }\n            if (plugin.particleFillColor ?? plugin.particleStrokeColor) {\n                this._colorPlugins.push(plugin);\n            }\n        }\n    }\n    initUpdaters() {\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        for (const updater of this.container.particles.updaters) {\n            if (updater.afterDraw) {\n                this._postDrawUpdaters.push(updater);\n            }\n            if (updater.getColorStyles ?? updater.getTransformValues ?? updater.beforeDraw) {\n                this._preDrawUpdaters.push(updater);\n            }\n        }\n    }\n    loadCanvas(canvas) {\n        if (this._generated && this.element) {\n            this.element.remove();\n        }\n        this._generated =\n            canvas.dataset && generatedAttribute in canvas.dataset\n                ? canvas.dataset[generatedAttribute] === \"true\"\n                : this._generated;\n        this.element = canvas;\n        this.element.ariaHidden = \"true\";\n        this._originalStyle = deepExtend({}, this.element.style);\n        this.size.height = canvas.offsetHeight;\n        this.size.width = canvas.offsetWidth;\n        this._context = this.element.getContext(\"2d\");\n        this._safeMutationObserver((obs) => {\n            if (!this.element) {\n                return;\n            }\n            obs.observe(this.element, { attributes: true });\n        });\n        this.container.retina.init();\n        this.initBackground();\n    }\n    paint() {\n        const options = this.container.actualOptions;\n        this.draw((ctx) => {\n            if (options.backgroundMask.enable && options.backgroundMask.cover) {\n                clear(ctx, this.size);\n                if (this._coverImage) {\n                    this._paintImage(this._coverImage.image, this._coverImage.opacity);\n                }\n                else if (this._coverColorStyle) {\n                    this._paintBase(this._coverColorStyle);\n                }\n                else {\n                    this._paintBase();\n                }\n            }\n            else {\n                this._paintBase();\n            }\n        });\n    }\n    resize() {\n        if (!this.element) {\n            return false;\n        }\n        const container = this.container, pxRatio = container.retina.pixelRatio, size = container.canvas.size, newSize = {\n            width: this.element.offsetWidth * pxRatio,\n            height: this.element.offsetHeight * pxRatio,\n        };\n        if (newSize.height === size.height &&\n            newSize.width === size.width &&\n            newSize.height === this.element.height &&\n            newSize.width === this.element.width) {\n            return false;\n        }\n        const oldSize = { ...size };\n        this.element.width = size.width = this.element.offsetWidth * pxRatio;\n        this.element.height = size.height = this.element.offsetHeight * pxRatio;\n        if (this.container.started) {\n            container.particles.setResizeFactor({\n                width: size.width / oldSize.width,\n                height: size.height / oldSize.height,\n            });\n        }\n        return true;\n    }\n    stop() {\n        this._safeMutationObserver((obs) => obs.disconnect());\n        this._mutationObserver = undefined;\n        this.draw((ctx) => clear(ctx, this.size));\n    }\n    async windowResize() {\n        if (!this.element || !this.resize()) {\n            return;\n        }\n        const container = this.container, needsRefresh = container.updateActualOptions();\n        await container.particles.setDensity();\n        this._applyResizePlugins();\n        if (needsRefresh) {\n            await container.refresh();\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, isBoolean, safeMatchMedia } from \"../../Utils/Utils.js\";\nimport { millisecondsToSeconds, mouseDownEvent, mouseLeaveEvent, mouseMoveEvent, mouseOutEvent, mouseUpEvent, resizeEvent, touchCancelEvent, touchEndEvent, touchMoveEvent, touchStartEvent, visibilityChangeEvent, } from \"./Constants.js\";\nconst double = 2;\nfunction manageListener(element, event, handler, add, options) {\n    if (add) {\n        let addOptions = { passive: true };\n        if (isBoolean(options)) {\n            addOptions.capture = options;\n        }\n        else if (options !== undefined) {\n            addOptions = options;\n        }\n        element.addEventListener(event, handler, addOptions);\n    }\n    else {\n        const removeOptions = options;\n        element.removeEventListener(event, handler, removeOptions);\n    }\n}\nexport class EventListeners {\n    constructor(container) {\n        this.container = container;\n        this._doMouseTouchClick = (e) => {\n            const container = this.container, options = container.actualOptions;\n            if (this._canPush) {\n                const mouseInteractivity = container.interactivity.mouse, mousePos = mouseInteractivity.position;\n                if (!mousePos) {\n                    return;\n                }\n                mouseInteractivity.clickPosition = { ...mousePos };\n                mouseInteractivity.clickTime = new Date().getTime();\n                const onClick = options.interactivity.events.onClick;\n                executeOnSingleOrMultiple(onClick.mode, (mode) => this.container.handleClickMode(mode));\n            }\n            if (e.type === \"touchend\") {\n                const touchDelay = 500;\n                setTimeout(() => this._mouseTouchFinish(), touchDelay);\n            }\n        };\n        this._handleThemeChange = (e) => {\n            const mediaEvent = e, container = this.container, options = container.options, defaultThemes = options.defaultThemes, themeName = mediaEvent.matches ? defaultThemes.dark : defaultThemes.light, theme = options.themes.find((theme) => theme.name === themeName);\n            if (theme && theme.default.auto) {\n                void container.loadTheme(themeName);\n            }\n        };\n        this._handleVisibilityChange = () => {\n            const container = this.container, options = container.actualOptions;\n            this._mouseTouchFinish();\n            if (!options.pauseOnBlur) {\n                return;\n            }\n            if (document && document.hidden) {\n                container.pageHidden = true;\n                container.pause();\n            }\n            else {\n                container.pageHidden = false;\n                if (container.animationStatus) {\n                    container.play(true);\n                }\n                else {\n                    container.draw(true);\n                }\n            }\n        };\n        this._handleWindowResize = () => {\n            if (this._resizeTimeout) {\n                clearTimeout(this._resizeTimeout);\n                delete this._resizeTimeout;\n            }\n            const handleResize = async () => {\n                const canvas = this.container.canvas;\n                await canvas?.windowResize();\n            };\n            this._resizeTimeout = setTimeout(() => void handleResize(), this.container.actualOptions.interactivity.events.resize.delay * millisecondsToSeconds);\n        };\n        this._manageInteractivityListeners = (mouseLeaveTmpEvent, add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions;\n            const interactivityEl = container.interactivity.element;\n            if (!interactivityEl) {\n                return;\n            }\n            const html = interactivityEl, canvasEl = container.canvas.element;\n            if (canvasEl) {\n                canvasEl.style.pointerEvents = html === canvasEl ? \"initial\" : \"none\";\n            }\n            if (!(options.interactivity.events.onHover.enable || options.interactivity.events.onClick.enable)) {\n                return;\n            }\n            manageListener(interactivityEl, mouseMoveEvent, handlers.mouseMove, add);\n            manageListener(interactivityEl, touchStartEvent, handlers.touchStart, add);\n            manageListener(interactivityEl, touchMoveEvent, handlers.touchMove, add);\n            if (!options.interactivity.events.onClick.enable) {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEnd, add);\n            }\n            else {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEndClick, add);\n                manageListener(interactivityEl, mouseUpEvent, handlers.mouseUp, add);\n                manageListener(interactivityEl, mouseDownEvent, handlers.mouseDown, add);\n            }\n            manageListener(interactivityEl, mouseLeaveTmpEvent, handlers.mouseLeave, add);\n            manageListener(interactivityEl, touchCancelEvent, handlers.touchCancel, add);\n        };\n        this._manageListeners = (add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions, detectType = options.interactivity.detectsOn, canvasEl = container.canvas.element;\n            let mouseLeaveTmpEvent = mouseLeaveEvent;\n            if (detectType === \"window\") {\n                container.interactivity.element = window;\n                mouseLeaveTmpEvent = mouseOutEvent;\n            }\n            else if (detectType === \"parent\" && canvasEl) {\n                container.interactivity.element = canvasEl.parentElement ?? canvasEl.parentNode;\n            }\n            else {\n                container.interactivity.element = canvasEl;\n            }\n            this._manageMediaMatch(add);\n            this._manageResize(add);\n            this._manageInteractivityListeners(mouseLeaveTmpEvent, add);\n            if (document) {\n                manageListener(document, visibilityChangeEvent, handlers.visibilityChange, add, false);\n            }\n        };\n        this._manageMediaMatch = (add) => {\n            const handlers = this._handlers, mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\");\n            if (!mediaMatch) {\n                return;\n            }\n            if (mediaMatch.addEventListener !== undefined) {\n                manageListener(mediaMatch, \"change\", handlers.themeChange, add);\n                return;\n            }\n            if (mediaMatch.addListener === undefined) {\n                return;\n            }\n            if (add) {\n                mediaMatch.addListener(handlers.oldThemeChange);\n            }\n            else {\n                mediaMatch.removeListener(handlers.oldThemeChange);\n            }\n        };\n        this._manageResize = (add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions;\n            if (!options.interactivity.events.resize) {\n                return;\n            }\n            if (typeof ResizeObserver === \"undefined\") {\n                manageListener(window, resizeEvent, handlers.resize, add);\n                return;\n            }\n            const canvasEl = container.canvas.element;\n            if (this._resizeObserver && !add) {\n                if (canvasEl) {\n                    this._resizeObserver.unobserve(canvasEl);\n                }\n                this._resizeObserver.disconnect();\n                delete this._resizeObserver;\n            }\n            else if (!this._resizeObserver && add && canvasEl) {\n                this._resizeObserver = new ResizeObserver((entries) => {\n                    const entry = entries.find((e) => e.target === canvasEl);\n                    if (!entry) {\n                        return;\n                    }\n                    this._handleWindowResize();\n                });\n                this._resizeObserver.observe(canvasEl);\n            }\n        };\n        this._mouseDown = () => {\n            const { interactivity } = this.container;\n            if (!interactivity) {\n                return;\n            }\n            const { mouse } = interactivity;\n            mouse.clicking = true;\n            mouse.downPosition = mouse.position;\n        };\n        this._mouseTouchClick = (e) => {\n            const container = this.container, options = container.actualOptions, { mouse } = container.interactivity;\n            mouse.inside = true;\n            let handled = false;\n            const mousePosition = mouse.position;\n            if (!mousePosition || !options.interactivity.events.onClick.enable) {\n                return;\n            }\n            for (const [, plugin] of container.plugins) {\n                if (!plugin.clickPositionValid) {\n                    continue;\n                }\n                handled = plugin.clickPositionValid(mousePosition);\n                if (handled) {\n                    break;\n                }\n            }\n            if (!handled) {\n                this._doMouseTouchClick(e);\n            }\n            mouse.clicking = false;\n        };\n        this._mouseTouchFinish = () => {\n            const interactivity = this.container.interactivity;\n            if (!interactivity) {\n                return;\n            }\n            const mouse = interactivity.mouse;\n            delete mouse.position;\n            delete mouse.clickPosition;\n            delete mouse.downPosition;\n            interactivity.status = mouseLeaveEvent;\n            mouse.inside = false;\n            mouse.clicking = false;\n        };\n        this._mouseTouchMove = (e) => {\n            const container = this.container, options = container.actualOptions, interactivity = container.interactivity, canvasEl = container.canvas.element;\n            if (!interactivity?.element) {\n                return;\n            }\n            interactivity.mouse.inside = true;\n            let pos;\n            if (e.type.startsWith(\"pointer\")) {\n                this._canPush = true;\n                const mouseEvent = e;\n                if (interactivity.element === window) {\n                    if (canvasEl) {\n                        const clientRect = canvasEl.getBoundingClientRect();\n                        pos = {\n                            x: mouseEvent.clientX - clientRect.left,\n                            y: mouseEvent.clientY - clientRect.top,\n                        };\n                    }\n                }\n                else if (options.interactivity.detectsOn === \"parent\") {\n                    const source = mouseEvent.target, target = mouseEvent.currentTarget;\n                    if (source && target && canvasEl) {\n                        const sourceRect = source.getBoundingClientRect(), targetRect = target.getBoundingClientRect(), canvasRect = canvasEl.getBoundingClientRect();\n                        pos = {\n                            x: mouseEvent.offsetX + double * sourceRect.left - (targetRect.left + canvasRect.left),\n                            y: mouseEvent.offsetY + double * sourceRect.top - (targetRect.top + canvasRect.top),\n                        };\n                    }\n                    else {\n                        pos = {\n                            x: mouseEvent.offsetX ?? mouseEvent.clientX,\n                            y: mouseEvent.offsetY ?? mouseEvent.clientY,\n                        };\n                    }\n                }\n                else if (mouseEvent.target === canvasEl) {\n                    pos = {\n                        x: mouseEvent.offsetX ?? mouseEvent.clientX,\n                        y: mouseEvent.offsetY ?? mouseEvent.clientY,\n                    };\n                }\n            }\n            else {\n                this._canPush = e.type !== \"touchmove\";\n                if (canvasEl) {\n                    const touchEvent = e, lengthOffset = 1, lastTouch = touchEvent.touches[touchEvent.touches.length - lengthOffset], canvasRect = canvasEl.getBoundingClientRect(), defaultCoordinate = 0;\n                    pos = {\n                        x: lastTouch.clientX - (canvasRect.left ?? defaultCoordinate),\n                        y: lastTouch.clientY - (canvasRect.top ?? defaultCoordinate),\n                    };\n                }\n            }\n            const pxRatio = container.retina.pixelRatio;\n            if (pos) {\n                pos.x *= pxRatio;\n                pos.y *= pxRatio;\n            }\n            interactivity.mouse.position = pos;\n            interactivity.status = mouseMoveEvent;\n        };\n        this._touchEnd = (e) => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.delete(touch.identifier);\n            }\n            this._mouseTouchFinish();\n        };\n        this._touchEndClick = (e) => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.delete(touch.identifier);\n            }\n            this._mouseTouchClick(e);\n        };\n        this._touchStart = (e) => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.set(touch.identifier, performance.now());\n            }\n            this._mouseTouchMove(e);\n        };\n        this._canPush = true;\n        this._touches = new Map();\n        this._handlers = {\n            mouseDown: () => this._mouseDown(),\n            mouseLeave: () => this._mouseTouchFinish(),\n            mouseMove: (e) => this._mouseTouchMove(e),\n            mouseUp: (e) => this._mouseTouchClick(e),\n            touchStart: (e) => this._touchStart(e),\n            touchMove: (e) => this._mouseTouchMove(e),\n            touchEnd: (e) => this._touchEnd(e),\n            touchCancel: (e) => this._touchEnd(e),\n            touchEndClick: (e) => this._touchEndClick(e),\n            visibilityChange: () => this._handleVisibilityChange(),\n            themeChange: (e) => this._handleThemeChange(e),\n            oldThemeChange: (e) => this._handleThemeChange(e),\n            resize: () => {\n                this._handleWindowResize();\n            },\n        };\n    }\n    addListeners() {\n        this._manageListeners(true);\n    }\n    removeListeners() {\n        this._manageListeners(false);\n    }\n}\n","export class InteractionManager {\n    constructor(engine, container) {\n        this.container = container;\n        this._engine = engine;\n        this._interactors = [];\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n    }\n    async externalInteract(delta) {\n        for (const interactor of this._externalInteractors) {\n            if (interactor.isEnabled()) {\n                await interactor.interact(delta);\n            }\n        }\n    }\n    handleClickMode(mode) {\n        for (const interactor of this._externalInteractors) {\n            interactor.handleClickMode?.(mode);\n        }\n    }\n    async init() {\n        this._interactors = await this._engine.getInteractors(this.container, true);\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n        for (const interactor of this._interactors) {\n            switch (interactor.type) {\n                case \"external\":\n                    this._externalInteractors.push(interactor);\n                    break;\n                case \"particles\":\n                    this._particleInteractors.push(interactor);\n                    break;\n            }\n            interactor.init();\n        }\n    }\n    async particlesInteract(particle, delta) {\n        for (const interactor of this._externalInteractors) {\n            interactor.clear(particle, delta);\n        }\n        for (const interactor of this._particleInteractors) {\n            if (interactor.isEnabled(particle)) {\n                await interactor.interact(particle, delta);\n            }\n        }\n    }\n    reset(particle) {\n        for (const interactor of this._externalInteractors) {\n            if (interactor.isEnabled()) {\n                interactor.reset(particle);\n            }\n        }\n        for (const interactor of this._particleInteractors) {\n            if (interactor.isEnabled(particle)) {\n                interactor.reset(particle);\n            }\n        }\n    }\n}\n","export class Point {\n    constructor(position, particle) {\n        this.position = position;\n        this.particle = particle;\n    }\n}\n","import { Circle } from \"./Circle.js\";\nimport { Rectangle } from \"./Rectangle.js\";\nimport { getDistance } from \"../../Utils/NumberUtils.js\";\nconst half = 0.5, double = 2, subdivideCount = 4;\nexport class QuadTree {\n    constructor(rectangle, capacity) {\n        this.rectangle = rectangle;\n        this.capacity = capacity;\n        this._subdivide = () => {\n            const { x, y } = this.rectangle.position, { width, height } = this.rectangle.size, { capacity } = this;\n            for (let i = 0; i < subdivideCount; i++) {\n                const fixedIndex = i % double;\n                this._subs.push(new QuadTree(new Rectangle(x + width * half * fixedIndex, y + height * half * (Math.round(i * half) - fixedIndex), width * half, height * half), capacity));\n            }\n            this._divided = true;\n        };\n        this._points = [];\n        this._divided = false;\n        this._subs = [];\n    }\n    insert(point) {\n        if (!this.rectangle.contains(point.position)) {\n            return false;\n        }\n        if (this._points.length < this.capacity) {\n            this._points.push(point);\n            return true;\n        }\n        if (!this._divided) {\n            this._subdivide();\n        }\n        return this._subs.some((sub) => sub.insert(point));\n    }\n    query(range, check, found) {\n        const res = found ?? [];\n        if (!range.intersects(this.rectangle)) {\n            return [];\n        }\n        for (const p of this._points) {\n            if (!range.contains(p.position) &&\n                getDistance(range.position, p.position) > p.particle.getRadius() &&\n                (!check || check(p.particle))) {\n                continue;\n            }\n            res.push(p.particle);\n        }\n        if (this._divided) {\n            for (const sub of this._subs) {\n                sub.query(range, check, res);\n            }\n        }\n        return res;\n    }\n    queryCircle(position, radius, check) {\n        return this.query(new Circle(position.x, position.y, radius), check);\n    }\n    queryRectangle(position, size, check) {\n        return this.query(new Rectangle(position.x, position.y, size.width, size.height), check);\n    }\n}\n","import { getLogger, getPosition } from \"../Utils/Utils.js\";\nimport { InteractionManager } from \"./Utils/InteractionManager.js\";\nimport { Point } from \"./Utils/Point.js\";\nimport { QuadTree } from \"./Utils/QuadTree.js\";\nimport { Rectangle } from \"./Utils/Rectangle.js\";\nimport { errorPrefix } from \"./Utils/Constants.js\";\nconst qTreeCapacity = 4, squareExp = 2, defaultRemoveQuantity = 1;\nconst qTreeRectangle = (canvasSize) => {\n    const { height, width } = canvasSize, posOffset = -0.25, sizeFactor = 1.5;\n    return new Rectangle(posOffset * width, posOffset * height, sizeFactor * width, sizeFactor * height);\n};\nexport class Particles {\n    constructor(engine, container) {\n        this._addToPool = (...particles) => {\n            for (const particle of particles) {\n                this._pool.push(particle);\n            }\n        };\n        this._applyDensity = async (options, manualCount, group) => {\n            const numberOptions = options.number;\n            if (!options.number.density?.enable) {\n                if (group === undefined) {\n                    this._limit = numberOptions.limit.value;\n                }\n                else if (numberOptions.limit) {\n                    this._groupLimits.set(group, numberOptions.limit.value);\n                }\n                return;\n            }\n            const densityFactor = this._initDensityFactor(numberOptions.density), optParticlesNumber = numberOptions.value, minLimit = 0, optParticlesLimit = numberOptions.limit.value > minLimit ? numberOptions.limit.value : optParticlesNumber, particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * densityFactor + manualCount, particlesCount = Math.min(this.count, this.filter((t) => t.group === group).length);\n            if (group === undefined) {\n                this._limit = numberOptions.limit.value * densityFactor;\n            }\n            else {\n                this._groupLimits.set(group, numberOptions.limit.value * densityFactor);\n            }\n            if (particlesCount < particlesNumber) {\n                await this.push(Math.abs(particlesNumber - particlesCount), undefined, options, group);\n            }\n            else if (particlesCount > particlesNumber) {\n                this.removeQuantity(particlesCount - particlesNumber, group);\n            }\n        };\n        this._initDensityFactor = (densityOptions) => {\n            const container = this._container, defaultFactor = 1;\n            if (!container.canvas.element || !densityOptions.enable) {\n                return defaultFactor;\n            }\n            const canvas = container.canvas.element, pxRatio = container.retina.pixelRatio;\n            return (canvas.width * canvas.height) / (densityOptions.height * densityOptions.width * pxRatio ** squareExp);\n        };\n        this._pushParticle = async (position, overrideOptions, group, initializer) => {\n            try {\n                let particle = this._pool.pop();\n                if (!particle) {\n                    const { Particle } = await import(\"./Particle.js\");\n                    particle = new Particle(this._engine, this._container);\n                }\n                await particle.init(this._nextId, position, overrideOptions, group);\n                let canAdd = true;\n                if (initializer) {\n                    canAdd = initializer(particle);\n                }\n                if (!canAdd) {\n                    return;\n                }\n                this._array.push(particle);\n                this._zArray.push(particle);\n                this._nextId++;\n                this._engine.dispatchEvent(\"particleAdded\", {\n                    container: this._container,\n                    data: {\n                        particle,\n                    },\n                });\n                return particle;\n            }\n            catch (e) {\n                getLogger().warning(`${errorPrefix} adding particle: ${e}`);\n            }\n        };\n        this._removeParticle = (index, group, override) => {\n            const particle = this._array[index];\n            if (!particle || particle.group !== group) {\n                return false;\n            }\n            const zIdx = this._zArray.indexOf(particle), deleteCount = 1;\n            this._array.splice(index, deleteCount);\n            this._zArray.splice(zIdx, deleteCount);\n            particle.destroy(override);\n            this._engine.dispatchEvent(\"particleRemoved\", {\n                container: this._container,\n                data: {\n                    particle,\n                },\n            });\n            this._addToPool(particle);\n            return true;\n        };\n        this._engine = engine;\n        this._container = container;\n        this._nextId = 0;\n        this._array = [];\n        this._zArray = [];\n        this._pool = [];\n        this._limit = 0;\n        this._groupLimits = new Map();\n        this._needsSort = false;\n        this._lastZIndex = 0;\n        this._interactionManager = new InteractionManager(engine, container);\n        this._pluginsInitialized = false;\n        const canvasSize = container.canvas.size;\n        this.quadTree = new QuadTree(qTreeRectangle(canvasSize), qTreeCapacity);\n        this.movers = [];\n        this.updaters = [];\n    }\n    get count() {\n        return this._array.length;\n    }\n    async addManualParticles() {\n        const container = this._container, options = container.actualOptions;\n        for (const particle of options.manualParticles) {\n            await this.addParticle(particle.position ? getPosition(particle.position, container.canvas.size) : undefined, particle.options);\n        }\n    }\n    async addParticle(position, overrideOptions, group, initializer) {\n        const limitOptions = this._container.actualOptions.particles.number.limit, limit = group === undefined ? this._limit : this._groupLimits.get(group) ?? this._limit, currentCount = this.count, minLimit = 0;\n        if (limit > minLimit) {\n            if (limitOptions.mode === \"delete\") {\n                const countOffset = 1, minCount = 0, countToRemove = currentCount + countOffset - limit;\n                if (countToRemove > minCount) {\n                    this.removeQuantity(countToRemove);\n                }\n            }\n            else if (limitOptions.mode === \"wait\") {\n                if (currentCount >= limit) {\n                    return;\n                }\n            }\n        }\n        return await this._pushParticle(position, overrideOptions, group, initializer);\n    }\n    clear() {\n        this._array = [];\n        this._zArray = [];\n        this._pluginsInitialized = false;\n    }\n    destroy() {\n        this._array = [];\n        this._zArray = [];\n        this.movers = [];\n        this.updaters = [];\n    }\n    async draw(delta) {\n        const container = this._container, canvas = container.canvas;\n        canvas.clear();\n        await this.update(delta);\n        for (const [, plugin] of container.plugins) {\n            await canvas.drawPlugin(plugin, delta);\n        }\n        for (const p of this._zArray) {\n            await p.draw(delta);\n        }\n    }\n    filter(condition) {\n        return this._array.filter(condition);\n    }\n    find(condition) {\n        return this._array.find(condition);\n    }\n    get(index) {\n        return this._array[index];\n    }\n    handleClickMode(mode) {\n        this._interactionManager.handleClickMode(mode);\n    }\n    async init() {\n        const container = this._container, options = container.actualOptions;\n        this._lastZIndex = 0;\n        this._needsSort = false;\n        await this.initPlugins();\n        let handled = false;\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particlesInitialization !== undefined) {\n                handled = plugin.particlesInitialization();\n            }\n            if (handled) {\n                break;\n            }\n        }\n        await this.addManualParticles();\n        if (!handled) {\n            const particlesOptions = options.particles, groups = particlesOptions.groups;\n            for (const group in groups) {\n                const groupOptions = groups[group];\n                for (let i = this.count, j = 0; j < groupOptions.number?.value && i < particlesOptions.number.value; i++, j++) {\n                    await this.addParticle(undefined, groupOptions, group);\n                }\n            }\n            for (let i = this.count; i < particlesOptions.number.value; i++) {\n                await this.addParticle();\n            }\n        }\n    }\n    async initPlugins() {\n        if (this._pluginsInitialized) {\n            return;\n        }\n        const container = this._container;\n        this.movers = await this._engine.getMovers(container, true);\n        this.updaters = await this._engine.getUpdaters(container, true);\n        await this._interactionManager.init();\n        for (const [, pathGenerator] of container.pathGenerators) {\n            await pathGenerator.init(container);\n        }\n    }\n    async push(nb, mouse, overrideOptions, group) {\n        for (let i = 0; i < nb; i++) {\n            await this.addParticle(mouse?.position, overrideOptions, group);\n        }\n    }\n    async redraw() {\n        this.clear();\n        await this.init();\n        await this.draw({ value: 0, factor: 0 });\n    }\n    remove(particle, group, override) {\n        this.removeAt(this._array.indexOf(particle), undefined, group, override);\n    }\n    removeAt(index, quantity = defaultRemoveQuantity, group, override) {\n        const minIndex = 0;\n        if (index < minIndex || index > this.count) {\n            return;\n        }\n        let deleted = 0;\n        for (let i = index; deleted < quantity && i < this.count; i++) {\n            if (this._removeParticle(i--, group, override)) {\n                deleted++;\n            }\n        }\n    }\n    removeQuantity(quantity, group) {\n        const defaultIndex = 0;\n        this.removeAt(defaultIndex, quantity, group);\n    }\n    async setDensity() {\n        const options = this._container.actualOptions, groups = options.particles.groups, manualCount = 0;\n        for (const group in groups) {\n            await this._applyDensity(groups[group], manualCount, group);\n        }\n        await this._applyDensity(options.particles, options.manualParticles.length);\n    }\n    setLastZIndex(zIndex) {\n        this._lastZIndex = zIndex;\n        this._needsSort = this._needsSort || this._lastZIndex < zIndex;\n    }\n    setResizeFactor(factor) {\n        this._resizeFactor = factor;\n    }\n    async update(delta) {\n        const container = this._container, particlesToDelete = new Set();\n        this.quadTree = new QuadTree(qTreeRectangle(container.canvas.size), qTreeCapacity);\n        for (const [, pathGenerator] of container.pathGenerators) {\n            pathGenerator.update();\n        }\n        for (const [, plugin] of container.plugins) {\n            await plugin.update?.(delta);\n        }\n        const resizeFactor = this._resizeFactor;\n        for (const particle of this._array) {\n            if (resizeFactor && !particle.ignoresResizeRatio) {\n                particle.position.x *= resizeFactor.width;\n                particle.position.y *= resizeFactor.height;\n                particle.initialPosition.x *= resizeFactor.width;\n                particle.initialPosition.y *= resizeFactor.height;\n            }\n            particle.ignoresResizeRatio = false;\n            this._interactionManager.reset(particle);\n            for (const [, plugin] of this._container.plugins) {\n                if (particle.destroyed) {\n                    break;\n                }\n                plugin.particleUpdate?.(particle, delta);\n            }\n            for (const mover of this.movers) {\n                if (mover.isEnabled(particle)) {\n                    await mover.move(particle, delta);\n                }\n            }\n            if (particle.destroyed) {\n                particlesToDelete.add(particle);\n                continue;\n            }\n            this.quadTree.insert(new Point(particle.getPosition(), particle));\n        }\n        if (particlesToDelete.size) {\n            const checkDelete = (p) => !particlesToDelete.has(p);\n            this._array = this.filter(checkDelete);\n            this._zArray = this._zArray.filter(checkDelete);\n            for (const particle of particlesToDelete) {\n                this._engine.dispatchEvent(\"particleRemoved\", {\n                    container: this._container,\n                    data: {\n                        particle,\n                    },\n                });\n            }\n            this._addToPool(...particlesToDelete);\n        }\n        await this._interactionManager.externalInteract(delta);\n        for (const particle of this._array) {\n            for (const updater of this.updaters) {\n                await updater.update(particle, delta);\n            }\n            if (!particle.destroyed && !particle.spawning) {\n                await this._interactionManager.particlesInteract(particle, delta);\n            }\n        }\n        delete this._resizeFactor;\n        if (this._needsSort) {\n            const zArray = this._zArray;\n            zArray.sort((a, b) => b.position.z - a.position.z || a.id - b.id);\n            const lengthOffset = 1;\n            this._lastZIndex = zArray[zArray.length - lengthOffset].position.z;\n            this._needsSort = false;\n        }\n    }\n}\n","import { getRangeValue } from \"../Utils/NumberUtils.js\";\nimport { isSsr } from \"../Utils/Utils.js\";\nconst defaultRatio = 1, defaultReduceFactor = 1;\nexport class Retina {\n    constructor(container) {\n        this.container = container;\n        this.pixelRatio = defaultRatio;\n        this.reduceFactor = defaultReduceFactor;\n    }\n    init() {\n        const container = this.container, options = container.actualOptions;\n        this.pixelRatio = !options.detectRetina || isSsr() ? defaultRatio : window.devicePixelRatio;\n        this.reduceFactor = defaultReduceFactor;\n        const ratio = this.pixelRatio, canvas = container.canvas;\n        if (canvas.element) {\n            const element = canvas.element;\n            canvas.size.width = element.offsetWidth * ratio;\n            canvas.size.height = element.offsetHeight * ratio;\n        }\n        const particles = options.particles, moveOptions = particles.move;\n        this.maxSpeed = getRangeValue(moveOptions.gravity.maxSpeed) * ratio;\n        this.sizeAnimationSpeed = getRangeValue(particles.size.animation.speed) * ratio;\n    }\n    initParticle(particle) {\n        const options = particle.options, ratio = this.pixelRatio, moveOptions = options.move, moveDistance = moveOptions.distance, props = particle.retina;\n        props.moveDrift = getRangeValue(moveOptions.drift) * ratio;\n        props.moveSpeed = getRangeValue(moveOptions.speed) * ratio;\n        props.sizeAnimationSpeed = getRangeValue(options.size.animation.speed) * ratio;\n        const maxDistance = props.maxDistance;\n        maxDistance.horizontal = moveDistance.horizontal !== undefined ? moveDistance.horizontal * ratio : undefined;\n        maxDistance.vertical = moveDistance.vertical !== undefined ? moveDistance.vertical * ratio : undefined;\n        props.maxSpeed = getRangeValue(moveOptions.gravity.maxSpeed) * ratio;\n    }\n}\n","import { errorPrefix, millisecondsToSeconds } from \"./Utils/Constants.js\";\nimport { getLogger, safeIntersectionObserver } from \"../Utils/Utils.js\";\nimport { Canvas } from \"./Canvas.js\";\nimport { EventListeners } from \"./Utils/EventListeners.js\";\nimport { Options } from \"../Options/Classes/Options.js\";\nimport { Particles } from \"./Particles.js\";\nimport { Retina } from \"./Retina.js\";\nimport { getRangeValue } from \"../Utils/NumberUtils.js\";\nimport { loadOptions } from \"../Utils/OptionsUtils.js\";\nfunction guardCheck(container) {\n    return container && !container.destroyed;\n}\nconst defaultFps = 60;\nfunction initDelta(value, fpsLimit = defaultFps, smooth = false) {\n    return {\n        value,\n        factor: smooth ? defaultFps / fpsLimit : (defaultFps * value) / millisecondsToSeconds,\n    };\n}\nfunction loadContainerOptions(engine, container, ...sourceOptionsArr) {\n    const options = new Options(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\nexport class Container {\n    constructor(engine, id, sourceOptions) {\n        this._intersectionManager = (entries) => {\n            if (!guardCheck(this) || !this.actualOptions.pauseOnOutsideViewport) {\n                return;\n            }\n            for (const entry of entries) {\n                if (entry.target !== this.interactivity.element) {\n                    continue;\n                }\n                if (entry.isIntersecting) {\n                    this.play();\n                }\n                else {\n                    this.pause();\n                }\n            }\n        };\n        this._nextFrame = async (timestamp) => {\n            try {\n                if (!this._smooth &&\n                    this._lastFrameTime !== undefined &&\n                    timestamp < this._lastFrameTime + millisecondsToSeconds / this.fpsLimit) {\n                    this.draw(false);\n                    return;\n                }\n                this._lastFrameTime ??= timestamp;\n                const delta = initDelta(timestamp - this._lastFrameTime, this.fpsLimit, this._smooth);\n                this.addLifeTime(delta.value);\n                this._lastFrameTime = timestamp;\n                if (delta.value > millisecondsToSeconds) {\n                    this.draw(false);\n                    return;\n                }\n                await this.particles.draw(delta);\n                if (!this.alive()) {\n                    this.destroy();\n                    return;\n                }\n                if (this.animationStatus) {\n                    this.draw(false);\n                }\n            }\n            catch (e) {\n                getLogger().error(`${errorPrefix} in animation loop`, e);\n            }\n        };\n        this._engine = engine;\n        this.id = Symbol(id);\n        this.fpsLimit = 120;\n        this._smooth = false;\n        this._delay = 0;\n        this._duration = 0;\n        this._lifeTime = 0;\n        this._firstStart = true;\n        this.started = false;\n        this.destroyed = false;\n        this._paused = true;\n        this._lastFrameTime = 0;\n        this.zLayers = 100;\n        this.pageHidden = false;\n        this._sourceOptions = sourceOptions;\n        this._initialSourceOptions = sourceOptions;\n        this.retina = new Retina(this);\n        this.canvas = new Canvas(this);\n        this.particles = new Particles(this._engine, this);\n        this.pathGenerators = new Map();\n        this.interactivity = {\n            mouse: {\n                clicking: false,\n                inside: false,\n            },\n        };\n        this.plugins = new Map();\n        this.effectDrawers = new Map();\n        this.shapeDrawers = new Map();\n        this._options = loadContainerOptions(this._engine, this);\n        this.actualOptions = loadContainerOptions(this._engine, this);\n        this._eventListeners = new EventListeners(this);\n        this._intersectionObserver = safeIntersectionObserver((entries) => this._intersectionManager(entries));\n        this._engine.dispatchEvent(\"containerBuilt\", { container: this });\n    }\n    get animationStatus() {\n        return !this._paused && !this.pageHidden && guardCheck(this);\n    }\n    get options() {\n        return this._options;\n    }\n    get sourceOptions() {\n        return this._sourceOptions;\n    }\n    addClickHandler(callback) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const el = this.interactivity.element;\n        if (!el) {\n            return;\n        }\n        const clickOrTouchHandler = (e, pos, radius) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const pxRatio = this.retina.pixelRatio, posRetina = {\n                x: pos.x * pxRatio,\n                y: pos.y * pxRatio,\n            }, particles = this.particles.quadTree.queryCircle(posRetina, radius * pxRatio);\n            callback(e, particles);\n        };\n        const clickHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const mouseEvent = e, pos = {\n                x: mouseEvent.offsetX || mouseEvent.clientX,\n                y: mouseEvent.offsetY || mouseEvent.clientY,\n            }, radius = 1;\n            clickOrTouchHandler(e, pos, radius);\n        };\n        const touchStartHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = true;\n            touchMoved = false;\n        };\n        const touchMoveHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touchMoved = true;\n        };\n        const touchEndHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            if (touched && !touchMoved) {\n                const touchEvent = e;\n                const lengthOffset = 1;\n                let lastTouch = touchEvent.touches[touchEvent.touches.length - lengthOffset];\n                if (!lastTouch) {\n                    lastTouch = touchEvent.changedTouches[touchEvent.changedTouches.length - lengthOffset];\n                    if (!lastTouch) {\n                        return;\n                    }\n                }\n                const element = this.canvas.element, canvasRect = element ? element.getBoundingClientRect() : undefined, minCoordinate = 0, pos = {\n                    x: lastTouch.clientX - (canvasRect ? canvasRect.left : minCoordinate),\n                    y: lastTouch.clientY - (canvasRect ? canvasRect.top : minCoordinate),\n                };\n                clickOrTouchHandler(e, pos, Math.max(lastTouch.radiusX, lastTouch.radiusY));\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        const touchCancelHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        let touched = false, touchMoved = false;\n        el.addEventListener(\"click\", clickHandler);\n        el.addEventListener(\"touchstart\", touchStartHandler);\n        el.addEventListener(\"touchmove\", touchMoveHandler);\n        el.addEventListener(\"touchend\", touchEndHandler);\n        el.addEventListener(\"touchcancel\", touchCancelHandler);\n    }\n    addLifeTime(value) {\n        this._lifeTime += value;\n    }\n    addPath(key, generator, override = false) {\n        if (!guardCheck(this) || (!override && this.pathGenerators.has(key))) {\n            return false;\n        }\n        this.pathGenerators.set(key, generator);\n        return true;\n    }\n    alive() {\n        return !this._duration || this._lifeTime <= this._duration;\n    }\n    destroy() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        this.particles.destroy();\n        this.canvas.destroy();\n        for (const [, effectDrawer] of this.effectDrawers) {\n            effectDrawer.destroy?.(this);\n        }\n        for (const [, shapeDrawer] of this.shapeDrawers) {\n            shapeDrawer.destroy?.(this);\n        }\n        for (const key of this.effectDrawers.keys()) {\n            this.effectDrawers.delete(key);\n        }\n        for (const key of this.shapeDrawers.keys()) {\n            this.shapeDrawers.delete(key);\n        }\n        this._engine.clearPlugins(this);\n        this.destroyed = true;\n        const mainArr = this._engine.dom(), idx = mainArr.findIndex((t) => t === this), minIndex = 0;\n        if (idx >= minIndex) {\n            const deleteCount = 1;\n            mainArr.splice(idx, deleteCount);\n        }\n        this._engine.dispatchEvent(\"containerDestroyed\", { container: this });\n    }\n    draw(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        let refreshTime = force;\n        const frame = async (timestamp) => {\n            if (refreshTime) {\n                this._lastFrameTime = undefined;\n                refreshTime = false;\n            }\n            await this._nextFrame(timestamp);\n        };\n        this._drawAnimationFrame = requestAnimationFrame((timestamp) => void frame(timestamp));\n    }\n    async export(type, options = {}) {\n        for (const [, plugin] of this.plugins) {\n            if (!plugin.export) {\n                continue;\n            }\n            const res = await plugin.export(type, options);\n            if (!res.supported) {\n                continue;\n            }\n            return res.blob;\n        }\n        getLogger().error(`${errorPrefix} - Export plugin with type ${type} not found`);\n    }\n    handleClickMode(mode) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.particles.handleClickMode(mode);\n        for (const [, plugin] of this.plugins) {\n            plugin.handleClickMode?.(mode);\n        }\n    }\n    async init() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const effects = this._engine.getSupportedEffects();\n        for (const type of effects) {\n            const drawer = this._engine.getEffectDrawer(type);\n            if (drawer) {\n                this.effectDrawers.set(type, drawer);\n            }\n        }\n        const shapes = this._engine.getSupportedShapes();\n        for (const type of shapes) {\n            const drawer = this._engine.getShapeDrawer(type);\n            if (drawer) {\n                this.shapeDrawers.set(type, drawer);\n            }\n        }\n        await this.particles.initPlugins();\n        this._options = loadContainerOptions(this._engine, this, this._initialSourceOptions, this.sourceOptions);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        const availablePlugins = await this._engine.getAvailablePlugins(this);\n        for (const [id, plugin] of availablePlugins) {\n            this.plugins.set(id, plugin);\n        }\n        this.retina.init();\n        await this.canvas.init();\n        this.updateActualOptions();\n        this.canvas.initBackground();\n        this.canvas.resize();\n        this.zLayers = this.actualOptions.zLayers;\n        this._duration = getRangeValue(this.actualOptions.duration) * millisecondsToSeconds;\n        this._delay = getRangeValue(this.actualOptions.delay) * millisecondsToSeconds;\n        this._lifeTime = 0;\n        const defaultFpsLimit = 120, minFpsLimit = 0;\n        this.fpsLimit = this.actualOptions.fpsLimit > minFpsLimit ? this.actualOptions.fpsLimit : defaultFpsLimit;\n        this._smooth = this.actualOptions.smooth;\n        for (const [, drawer] of this.effectDrawers) {\n            await drawer.init?.(this);\n        }\n        for (const [, drawer] of this.shapeDrawers) {\n            await drawer.init?.(this);\n        }\n        for (const [, plugin] of this.plugins) {\n            await plugin.init?.();\n        }\n        this._engine.dispatchEvent(\"containerInit\", { container: this });\n        await this.particles.init();\n        await this.particles.setDensity();\n        for (const [, plugin] of this.plugins) {\n            plugin.particlesSetup?.();\n        }\n        this._engine.dispatchEvent(\"particlesSetup\", { container: this });\n    }\n    async loadTheme(name) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._currentTheme = name;\n        await this.refresh();\n    }\n    pause() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        if (this._drawAnimationFrame !== undefined) {\n            cancelAnimationFrame(this._drawAnimationFrame);\n            delete this._drawAnimationFrame;\n        }\n        if (this._paused) {\n            return;\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.pause?.();\n        }\n        if (!this.pageHidden) {\n            this._paused = true;\n        }\n        this._engine.dispatchEvent(\"containerPaused\", { container: this });\n    }\n    play(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const needsUpdate = this._paused || force;\n        if (this._firstStart && !this.actualOptions.autoPlay) {\n            this._firstStart = false;\n            return;\n        }\n        if (this._paused) {\n            this._paused = false;\n        }\n        if (needsUpdate) {\n            for (const [, plugin] of this.plugins) {\n                if (plugin.play) {\n                    plugin.play();\n                }\n            }\n        }\n        this._engine.dispatchEvent(\"containerPlay\", { container: this });\n        this.draw(needsUpdate ?? false);\n    }\n    async refresh() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        return this.start();\n    }\n    async reset() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._initialSourceOptions = undefined;\n        this._options = loadContainerOptions(this._engine, this);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        return this.refresh();\n    }\n    async start() {\n        if (!guardCheck(this) || this.started) {\n            return;\n        }\n        await this.init();\n        this.started = true;\n        await new Promise((resolve) => {\n            const start = async () => {\n                this._eventListeners.addListeners();\n                if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n                    this._intersectionObserver.observe(this.interactivity.element);\n                }\n                for (const [, plugin] of this.plugins) {\n                    await plugin.start?.();\n                }\n                this._engine.dispatchEvent(\"containerStarted\", { container: this });\n                this.play();\n                resolve();\n            };\n            this._delayTimeout = setTimeout(() => void start(), this._delay);\n        });\n    }\n    stop() {\n        if (!guardCheck(this) || !this.started) {\n            return;\n        }\n        if (this._delayTimeout) {\n            clearTimeout(this._delayTimeout);\n            delete this._delayTimeout;\n        }\n        this._firstStart = true;\n        this.started = false;\n        this._eventListeners.removeListeners();\n        this.pause();\n        this.particles.clear();\n        this.canvas.stop();\n        if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n            this._intersectionObserver.unobserve(this.interactivity.element);\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.stop?.();\n        }\n        for (const key of this.plugins.keys()) {\n            this.plugins.delete(key);\n        }\n        this._sourceOptions = this._options;\n        this._engine.dispatchEvent(\"containerStopped\", { container: this });\n    }\n    updateActualOptions() {\n        this.actualOptions.responsive = [];\n        const newMaxWidth = this.actualOptions.setResponsive(this.canvas.size.width, this.retina.pixelRatio, this._options);\n        this.actualOptions.setTheme(this._currentTheme);\n        if (this._responsiveMaxWidth === newMaxWidth) {\n            return false;\n        }\n        this._responsiveMaxWidth = newMaxWidth;\n        return true;\n    }\n}\n"],"names":["setTransformValue","factor","newFactor","key","newValue","_factor$key","undefined","setStyle","canvas","style","important","arguments","length","elementStyle","value","setProperty","Canvas","constructor","container","this","_applyPostDrawUpdaters","particle","updater","_postDrawUpdaters","_updater$afterDraw","afterDraw","call","_applyPreDrawUpdaters","ctx","radius","zOpacity","colorStyles","transform","_preDrawUpdaters","_updater$beforeDraw","getColorStyles","fill","stroke","getTransformValues","updaterTransform","beforeDraw","_applyResizePlugins","plugin","_resizePlugins","_plugin$resize","resize","_getPluginParticleColors","fColor","sColor","_colorPlugins","particleFillColor","rangeColorToHsl","particleStrokeColor","_initCover","async","cover","actualOptions","backgroundMask","color","coverRgb","rangeColorToRgb","coverColor","a","opacity","_coverColorStyle","getStyleFromRgb","Promise","resolve","reject","image","img","document","createElement","addEventListener","_coverImage","evt","error","src","_initStyle","element","options","_fullScreen","_originalStyle","deepExtend","_setFullScreenStyle","_resetOriginalStyle","_initTrail","trail","particles","move","trailFill","enable","fillColor","_trailFill","_paintBase","baseColor","draw","paintBase","size","_paintImage","paintImage","_repairStyle","_safeMutationObserver","observer","disconnect","initBackground","observe","attributes","originalStyle","callback","_mutationObserver","position","zIndex","fullScreen","toString","top","left","width","height","_context","_generated","clear","paint","destroy","stop","remove","cb","drawAsync","drawParticle","delta","_particle$getStrokeCo","spawning","destroyed","getRadius","pfColor","getFillColor","psColor","getStrokeColor","_ref","_particle$bubble$opac","_particle$opacity","_particle$strokeOpaci","zIndexOptions","zIndexFactor","zOpacityFactor","opacityRate","bubble","zStrokeOpacity","strokeOpacity","getStyleFromHsl","context","composite","sizeRate","shadow","drawParticlePlugin","drawPlugin","init","obs","safeMutationObserver","records","record","type","attributeName","e","getLogger","initUpdaters","initPlugins","background","backgroundColor","backgroundImage","backgroundPosition","backgroundRepeat","repeat","backgroundSize","plugins","_plugin$particleFillC","push","updaters","_ref2","_updater$getColorStyl","loadCanvas","dataset","generatedAttribute","ariaHidden","offsetHeight","offsetWidth","getContext","retina","pxRatio","pixelRatio","newSize","oldSize","started","setResizeFactor","windowResize","needsRefresh","updateActualOptions","setDensity","refresh","manageListener","event","handler","add","addOptions","passive","isBoolean","capture","removeOptions","removeEventListener","EventListeners","_doMouseTouchClick","_canPush","mouseInteractivity","interactivity","mouse","mousePos","clickPosition","clickTime","Date","getTime","onClick","events","executeOnSingleOrMultiple","mode","handleClickMode","setTimeout","_mouseTouchFinish","_handleThemeChange","mediaEvent","defaultThemes","themeName","matches","dark","light","theme","themes","find","name","default","auto","loadTheme","_handleVisibilityChange","pauseOnBlur","hidden","pageHidden","pause","animationStatus","play","_handleWindowResize","_resizeTimeout","clearTimeout","handleResize","delay","millisecondsToSeconds","_manageInteractivityListeners","mouseLeaveTmpEvent","handlers","_handlers","interactivityEl","html","canvasEl","pointerEvents","onHover","mouseMoveEvent","mouseMove","touchStartEvent","touchStart","touchMoveEvent","touchMove","touchEndEvent","touchEndClick","mouseUpEvent","mouseUp","mouseDownEvent","mouseDown","touchEnd","mouseLeave","touchCancelEvent","touchCancel","_manageListeners","detectType","detectsOn","mouseLeaveEvent","window","mouseOutEvent","_canvasEl$parentEleme","parentElement","parentNode","_manageMediaMatch","_manageResize","visibilityChangeEvent","visibilityChange","mediaMatch","safeMatchMedia","addListener","oldThemeChange","removeListener","themeChange","ResizeObserver","resizeEvent","_resizeObserver","unobserve","entries","target","_mouseDown","clicking","downPosition","_mouseTouchClick","inside","handled","mousePosition","clickPositionValid","status","_mouseTouchMove","pos","startsWith","mouseEvent","clientRect","getBoundingClientRect","x","clientX","y","clientY","source","currentTarget","sourceRect","targetRect","canvasRect","offsetX","offsetY","_mouseEvent$offsetX","_mouseEvent$offsetY","_mouseEvent$offsetX2","_mouseEvent$offsetY2","_canvasRect$left","_canvasRect$top","touchEvent","lengthOffset","lastTouch","touches","defaultCoordinate","_touchEnd","Array","from","changedTouches","touch","_touches","delete","identifier","_touchEndClick","_touchStart","set","performance","now","Map","addListeners","removeListeners","InteractionManager","engine","_engine","_interactors","_externalInteractors","_particleInteractors","externalInteract","interactor","isEnabled","interact","_interactor$handleCli","getInteractors","particlesInteract","reset","Point","half","QuadTree","rectangle","capacity","_subdivide","i","fixedIndex","_subs","Rectangle","Math","round","_divided","_points","insert","point","contains","some","sub","query","range","check","found","res","intersects","p","getDistance","queryCircle","Circle","queryRectangle","qTreeRectangle","canvasSize","Particles","_this","_addToPool","_len","_key","_pool","_applyDensity","manualCount","group","_options$number$densi","numberOptions","number","density","_limit","limit","_groupLimits","densityFactor","_initDensityFactor","optParticlesNumber","optParticlesLimit","particlesNumber","min","particlesCount","count","filter","t","abs","removeQuantity","densityOptions","_container","_pushParticle","overrideOptions","initializer","pop","Particle","_nextId","canAdd","_array","_zArray","dispatchEvent","data","warning","concat","errorPrefix","_removeParticle","index","override","zIdx","indexOf","splice","_needsSort","_lastZIndex","_interactionManager","_pluginsInitialized","quadTree","movers","addManualParticles","manualParticles","addParticle","getPosition","_this$_groupLimits$ge","limitOptions","get","currentCount","countToRemove","update","condition","particlesInitialization","particlesOptions","groups","groupOptions","j","_groupOptions$number","getMovers","getUpdaters","pathGenerator","pathGenerators","nb","redraw","removeAt","quantity","deleted","setLastZIndex","_resizeFactor","particlesToDelete","Set","_plugin$update","resizeFactor","ignoresResizeRatio","initialPosition","_plugin$particleUpdat","particleUpdate","mover","checkDelete","has","zArray","sort","b","z","id","Retina","reduceFactor","detectRetina","isSsr","devicePixelRatio","ratio","moveOptions","maxSpeed","getRangeValue","gravity","sizeAnimationSpeed","animation","speed","initParticle","moveDistance","distance","props","moveDrift","drift","moveSpeed","maxDistance","horizontal","vertical","guardCheck","loadContainerOptions","Options","sourceOptionsArr","loadOptions","Container","sourceOptions","_intersectionManager","pauseOnOutsideViewport","entry","isIntersecting","_nextFrame","_this$_lastFrameTime","_smooth","_lastFrameTime","timestamp","fpsLimit","initDelta","addLifeTime","alive","Symbol","_delay","_duration","_lifeTime","_firstStart","_paused","zLayers","_sourceOptions","_initialSourceOptions","effectDrawers","shapeDrawers","_options","_eventListeners","_intersectionObserver","safeIntersectionObserver","addClickHandler","el","clickOrTouchHandler","posRetina","touched","touchMoved","touchStartHandler","touchMoveHandler","minCoordinate","max","radiusX","radiusY","touchCancelHandler","addPath","generator","effectDrawer","_effectDrawer$destroy","shapeDrawer","_shapeDrawer$destroy","keys","clearPlugins","mainArr","dom","idx","findIndex","deleteCount","force","refreshTime","frame","_drawAnimationFrame","requestAnimationFrame","export","supported","blob","_plugin$handleClickMo","effects","getSupportedEffects","drawer","getEffectDrawer","shapes","getSupportedShapes","getShapeDrawer","availablePlugins","getAvailablePlugins","duration","smooth","_drawer$init","_drawer$init2","_plugin$init","_plugin$particlesSetu","particlesSetup","_currentTheme","cancelAnimationFrame","_plugin$pause","needsUpdate","autoPlay","start","HTMLElement","_plugin$start","_delayTimeout","_plugin$stop","responsive","newMaxWidth","setResponsive","setTheme","_responsiveMaxWidth"],"sourceRoot":""}