{"version":3,"file":"static/js/4552.8390c488.chunk.js","mappings":"4IACA,MAAMA,EAAS,EAAGC,EAAO,GAClB,SAASC,EAASC,GAAM,IAAAC,EAAAC,EAAAC,EAC3B,MAAM,QAAEC,EAAO,SAAEC,EAAQ,OAAEC,EAAM,QAAEC,GAAYP,EAAMQ,EAAYH,EAASI,UAC1E,IAAKD,EACD,OAEJ,MAAME,EAAWF,EAAUG,MAC3B,QAAiBC,IAAbF,EACA,YAEkBE,IAAlBP,EAASQ,OACTR,EAASQ,MAAOC,EAAAA,EAAAA,IAAyBJ,EAAUL,EAASU,kBAEhE,MAAMF,EAAOR,EAASQ,KAAMG,EAAuB,QAAlBf,EAAGO,EAAUQ,aAAK,IAAAf,EAAAA,EAAI,GAAIgB,EAAyB,QAAnBf,EAAGM,EAAUS,cAAM,IAAAf,EAAAA,EAAI,MAAOgB,EAAOC,KAAKC,MAAMd,GAAUT,EAAQwB,EAAqB,QAAjBlB,EAAGK,EAAUa,YAAI,IAAAlB,EAAAA,EAAI,UAAWmB,EAAOjB,EAASkB,UACjLC,EAAY,OAAJX,QAAI,IAAJA,OAAI,EAAJA,EAAMY,MAAM,MAC1B,GAAKD,EAAL,CAGApB,EAAQiB,KAAO,GAAHK,OAAMV,EAAK,KAAAU,OAAIT,EAAM,KAAAS,OAAIR,EAAI,QAAAQ,OAAOL,EAAI,KACpDjB,EAAQuB,YAAcpB,EACtB,IAAK,IAAIqB,EAAI,EAAGA,EAAIJ,EAAMK,OAAQD,IAC9BE,EAAS1B,EAASoB,EAAMI,GAAItB,EAAQC,EAASqB,EAAGN,GAEpDlB,EAAQuB,YAAc,CANtB,CAOJ,CACA,SAASG,EAAS1B,EAAS2B,EAAMzB,EAAQC,EAASyB,EAAOV,GACrD,MAA6CW,EAAM,CAC/CC,IADYH,EAAKF,OAASvB,EAASR,GAEnCqC,EAAG7B,EAASR,GACbsC,EAAW9B,EAAST,EACnByB,EACAlB,EAAQiC,SAASN,EAAME,EAAIC,EAAGD,EAAIE,EAAIC,EAAWJ,GAGjD5B,EAAQkC,WAAWP,EAAME,EAAIC,EAAGD,EAAIE,EAAIC,EAAWJ,EAE3D,C","sources":["../node_modules/@tsparticles/shape-text/browser/Utils.js"],"sourcesContent":["import { itemFromSingleOrMultiple } from \"@tsparticles/engine\";\nconst double = 2, half = 0.5;\nexport function drawText(data) {\n    const { context, particle, radius, opacity } = data, character = particle.shapeData;\n    if (!character) {\n        return;\n    }\n    const textData = character.value;\n    if (textData === undefined) {\n        return;\n    }\n    if (particle.text === undefined) {\n        particle.text = itemFromSingleOrMultiple(textData, particle.randomIndexData);\n    }\n    const text = particle.text, style = character.style ?? \"\", weight = character.weight ?? \"400\", size = Math.round(radius) * double, font = character.font ?? \"Verdana\", fill = particle.shapeFill;\n    const lines = text?.split(\"\\n\");\n    if (!lines) {\n        return;\n    }\n    context.font = `${style} ${weight} ${size}px \"${font}\"`;\n    context.globalAlpha = opacity;\n    for (let i = 0; i < lines.length; i++) {\n        drawLine(context, lines[i], radius, opacity, i, fill);\n    }\n    context.globalAlpha = 1;\n}\nfunction drawLine(context, line, radius, opacity, index, fill) {\n    const offsetX = line.length * radius * half, pos = {\n        x: -offsetX,\n        y: radius * half,\n    }, diameter = radius * double;\n    if (fill) {\n        context.fillText(line, pos.x, pos.y + diameter * index);\n    }\n    else {\n        context.strokeText(line, pos.x, pos.y + diameter * index);\n    }\n}\n"],"names":["double","half","drawText","data","_character$style","_character$weight","_character$font","context","particle","radius","opacity","character","shapeData","textData","value","undefined","text","itemFromSingleOrMultiple","randomIndexData","style","weight","size","Math","round","font","fill","shapeFill","lines","split","concat","globalAlpha","i","length","drawLine","line","index","pos","x","y","diameter","fillText","strokeText"],"sourceRoot":""}