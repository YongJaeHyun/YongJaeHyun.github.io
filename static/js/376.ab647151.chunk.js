"use strict";(self.webpackChunkportfolio=self.webpackChunkportfolio||[]).push([[376],{376:(t,i,o)=>{o.d(i,{ExternalLighter:()=>s});var n=o(4864),a=o(4712),e=o(7924);class s extends n.Ef{constructor(t){super(t)}clear(){}init(){}async interact(){const t=this.container,i=t.actualOptions,o=t.interactivity;if(!i.interactivity.events.onHover.enable||"pointermove"!==o.status)return;const n=o.mouse.position;n&&(t.canvas.draw((i=>{(0,a.mc)(t,i,n)})),await Promise.resolve())}isEnabled(t){var i;const o=this.container,e=o.interactivity.mouse,s=null!==(i=null===t||void 0===t?void 0:t.interactivity)&&void 0!==i?i:o.actualOptions.interactivity,r=s.events;if(!r.onHover.enable||!e.position)return!1;const l=(0,n.Sc)(a.iS,r.onHover.mode);if(l&&s.modes.light){const t=s.modes.light.area.gradient;o.canvas.mouseLight={start:(0,n.Af)(t.start),stop:(0,n.Af)(t.stop)}}return l}loadModeOptions(t){t.light||(t.light=new e.O);for(var i=arguments.length,o=new Array(i>1?i-1:0),n=1;n<i;n++)o[n-1]=arguments[n];for(const a of o)t.light.load(null===a||void 0===a?void 0:a.light)}reset(){}}},4712:(t,i,o)=>{o.d(i,{K4:()=>h,iS:()=>c,mc:()=>d});var n=o(4864);const a={max:1,min:0},e=.5*Math.PI,s=2*Math.PI,r=.25*Math.PI,l=0,c="light";function d(t,i,o){var e;const r=null===(e=t.actualOptions.interactivity.modes.light)||void 0===e?void 0:e.area;if(!r)return;i.beginPath(),i.arc(o.x,o.y,r.radius,l,s);const c=i.createRadialGradient(o.x,o.y,l,o.x,o.y,r.radius),d=t.canvas.mouseLight;null!==d&&void 0!==d&&d.start&&d.stop&&(c.addColorStop(a.min,(0,n.a2)(d.start)),c.addColorStop(a.max,(0,n.a2)(d.stop)),i.fillStyle=c,i.fill())}function h(t,i,o,a){var l;const c=o.getPosition(),d=null===(l=t.actualOptions.interactivity.modes.light)||void 0===l?void 0:l.shadow;if(!d)return;const h=o.lightShadow;if(!h)return;const u=o.getRadius(),v=o.sides,f=s/v,y=-o.rotation+r,p=[];for(let n=0;n<v;n++)p.push({x:c.x+u*Math.sin(y+f*n)*1,y:c.y+u*Math.cos(y+f*n)*1});const g=[],m=d.length;for(const n of p){const t=Math.atan2(a.y-n.y,a.x-n.x),i={x:n.x+m*Math.sin(-t-e),y:n.y+m*Math.cos(-t-e)};g.push({end:i,start:n})}const x=(0,n.a2)(h);for(let n=g.length-1,e=0;n>=0;e=n--)i.beginPath(),i.moveTo(g[n].start.x,g[n].start.y),i.lineTo(g[e].start.x,g[e].start.y),i.lineTo(g[e].end.x,g[e].end.y),i.lineTo(g[n].end.x,g[n].end.y),i.fillStyle=x,i.fill()}}}]);
//# sourceMappingURL=376.ab647151.chunk.js.map